{"version":3,"sources":["actions/index.js","reducers/index.js","utils.js","components/Welcome.js","components/Question.js","components/Histogram.js","components/three.js","components/ConvexHull.js","components/Legend.js","components/PreferencePlane.js","components/Visuals.js","components/Stats.js","components/Interaction.js","components/Result.js","components/App.js","index.js"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","points","labels","attributes","candidates","mask","forEach","_ref","_ref2","Object","slicedToArray","attr","objectSpread","prunedPoints","indices","map","idx","step","concat","toConsumableArray","leftPoints","filter","indexOf","numLeftPoints","prev","mode","vertices","parsePoints","text","trim","split","slice","line","str","parseFloat","parseLabels","loadDataset","asyncToGenerator","regenerator_default","a","mark","_callee","pointsURL","labelsURL","response","wrap","_context","next","fetch","sent","t0","t1","abrupt","t2","t3","stop","this","_x","_x2","apply","selectCandidates","ranges","maxPoints","val","low","high","i","point","isValid","j","push","array2Vector2D","array","vector","window","Module","VecVecDouble","arr","vec","VectorDouble","x","push_back","vector2Array2D","size","get","vector2Array","getPrunedIndices","prevIndices","currIndices","prunedIndices","Welcome","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleStart","_this$props$attribute","config","range","inputs","current","value","isNaN","alert","test","parseInt","startAlgorithm","handleModeChange","event","changeMode","target","React","createRef","_this2","trs","_ref3","_ref4","disabled","react_default","createElement","key","className","placeholder","ref","checked","onChange","toggleMask","name","id","htmlFor","style","maxWidth","width","onClick","Component","connect","_ref5","dispatch","setCandidates","defineProperty","SIMPLEX","RANDOM","Interaction","choose","option","runner","convexHullVertices","readConvexHullVertices","updateConvexHull","getCandidatesIndices","questioNo","prunePoints","stopInteraction","nextPair","setState","pair","showResult","smallerBetter","VectorInt","AlgorithmRunner","setLeftPoints","ths","tds","data-toggle","title","Histogram","_onMouseLeave","hintValue","_onNearestX","index","data","react_vis_es","onMouseLeave","height","tickValues","tickFormat","toString","ticks","fill","includeMargin","xPercent","yPercent","transform","textAnchor","color","onNearestX","animation","y","num","THREE","require","ConvexHull","drawGeometry","vertex","construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","transparent","mesh","Mesh","geo","EdgesGeometry","mat","LineBasicMaterial","linewidth","wireframe","LineSegments","add","scene","start","frameId","requestAnimationFrame","animate","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","clientHeight","Scene","PerspectiveCamera","OrbitControls","position","set","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","axes","AxesHelper","prevProps","remove","dispose","removeChild","Line","alignItems","display","backgroundColor","SlideItem","justifyContent","Legend","settings","dots","infinite","speed","slidesToShow","slidesToScroll","vertical","verticalSwiping","arrows","swipeToSlide","afterChange","changeStartingIndex","verticalAlign","slider","slickPrev","cursor","index_es","icon","faAngleUp","lib_default","assign","self","slickNext","faAngleDown","PreferencePlane","updateContextHullVertices","vertext","vert","components_ConvexHull","top","left","components_Legend","Visuals","minWidth","components_Histogram","components_PreferencePlane","Stats","prunedTrs","leftTrs","classNames","table-fixed","Question","components_Visuals","components_Stats","restart","th","components_Welcome","components_Interaction","components_Result","onRuntimeInitialized","_onRuntimeInitialized","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","es","components_App","document","getElementById","script","src","async","body"],"mappings":"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","file":"static/js/main.de5fcc04.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\nexport const UPDATE_CONVEX_HULL = \"UPDATE_CONVEX_HULL\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (points, labels, attributes) => ({\r\n  type: SET_DATASET,\r\n  points,\r\n  labels,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const prunePoints = (indices, step) => ({\r\n  type: PRUNE_POINTS,\r\n  indices,\r\n  step\r\n});\r\n\r\nexport const setLeftPoints = indices => ({\r\n  type: SET_LEFT_POINTS,\r\n  indices\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n\r\nexport const updateConvexHull = vertices => ({\r\n  type: UPDATE_CONVEX_HULL,\r\n  vertices\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst points = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.points;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst labels = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.labels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, step no.]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      const points = action.indices.map(idx => [idx, action.step]);\r\n      return [...points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of indices\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return action.indices;\r\n    case PRUNE_POINTS:\r\n      return state.filter(idx => action.indices.indexOf(idx) === -1);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.indices.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.indices.length];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  points,\r\n  labels,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  vertices\r\n});\r\n","function parsePoints(text) {\r\n  const points = text\r\n    .trim()\r\n    .split(\"\\n\")\r\n    .slice(1) // the first line is <numOfPoints> <dimension>\r\n    .map(line =>\r\n      line\r\n        .trim()\r\n        .split(/\\s+/)\r\n        .map(str => parseFloat(str))\r\n    );\r\n  return points;\r\n}\r\n\r\nfunction parseLabels(text) {\r\n  const labels = text.trim().split(\"\\n\");\r\n  return labels;\r\n}\r\n\r\nfunction isInRange(val, low, high) {\r\n  return low <= val && val <= high;\r\n}\r\n\r\nexport const getRanges = points => {\r\n  const ranges = points[0].map(x => ({ low: x, high: x }));\r\n  points.slice(1).forEach(point => {\r\n    point.forEach((x, i) => {\r\n      ranges[i].low = Math.min(ranges[i].low, x);\r\n      ranges[i].high = Math.max(ranges[i].high, x);\r\n    });\r\n  });\r\n  return ranges;\r\n};\r\n\r\nexport const loadDataset = async (pointsURL, labelsURL) => {\r\n  let response = await fetch(pointsURL);\r\n  const points = parsePoints(await response.text());\r\n  if (labelsURL === undefined) {\r\n    return points;\r\n  }\r\n  response = await fetch(labelsURL);\r\n  const labels = parseLabels(await response.text());\r\n  return [points, labels];\r\n};\r\n\r\nexport const selectCandidates = (points, ranges, mask, maxPoints) => {\r\n  const candidates = [];\r\n  for (let i = 0; i < points.length; ++i) {\r\n    if (candidates.length >= maxPoints) break;\r\n    const point = points[i];\r\n    let isValid = true;\r\n    for (let j = 0; j < point.length; ++j) {\r\n      if (mask[j] && !isInRange(point[j], ranges[j][0], ranges[j][1])) {\r\n        isValid = false;\r\n        break;\r\n      }\r\n    }\r\n    if (isValid) candidates.push(point);\r\n  }\r\n  return candidates;\r\n};\r\n\r\nexport const array2Vector2D = array => {\r\n  const vector = new window.Module.VecVecDouble();\r\n  array.forEach(arr => {\r\n    const vec = new window.Module.VectorDouble();\r\n    arr.forEach(x => vec.push_back(x));\r\n    vector.push_back(vec);\r\n  });\r\n  return vector;\r\n};\r\n\r\nexport const vector2Array2D = vector => {\r\n  const array = [];\r\n  for (let i = 0; i < vector.size(); ++i) {\r\n    const vec = vector.get(i);\r\n    const arr = [];\r\n    for (let j = 0; j < vec.size(); ++j) arr.push(vec.get(j));\r\n    array.push(arr);\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const vector2Array = vector => {\r\n  const array = [];\r\n  for (let i = 0; i < vector.size(); ++i) {\r\n    array.push(vector.get(i));\r\n  }\r\n  return array;\r\n};\r\n\r\nexport const getPrunedIndices = (prevIndices, currIndices) => {\r\n  let prunedIndices = [];\r\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size(); ) {\r\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\r\n      prunedIndices.push(prevIndices.get(i));\r\n      ++i;\r\n    } else {\r\n      ++i;\r\n      ++j;\r\n    }\r\n  }\r\n  return prunedIndices;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectCandidates } from \"../utils\";\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n  }\r\n\r\n  handleStart = () => {\r\n    const ranges = [];\r\n    const mask = [];\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value;\r\n          if (str === \"\") continue;\r\n          else if (isNaN(str)) {\r\n            alert(`${str} in range of ${attr} is not an integer`);\r\n            return;\r\n          } else {\r\n            range[j] = parseFloat(str);\r\n          }\r\n        }\r\n      }\r\n      ranges.push(range);\r\n      mask.push(this.props.mask[attr]);\r\n    }\r\n    let maxPoints;\r\n    const str = this.inputs.maxPoints.current.value;\r\n    if (str === \"\") maxPoints = 1000;\r\n    else if (/\\d+/.test(str)) maxPoints = parseInt(str);\r\n    else {\r\n      alert(`${str} for Max No. of Cars is not an integer`);\r\n      return;\r\n    }\r\n    const candidates = selectCandidates(\r\n      this.props.points,\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.length === 0) {\r\n      alert(\"No matching cars, try larger ranges\");\r\n      return;\r\n    }\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const trs = this.props.attributes.map(([attr, config]) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td className=\"align-middle\">{attr}</td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle hidden\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    trs.push(\r\n      <tr key=\"other\">\r\n        <td className=\"align-middle font-weight-bold\">Max No. of Cars</td>\r\n        <td>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"1000\"\r\n            ref={this.inputs.maxPoints}\r\n          />\r\n        </td>\r\n        <td>\r\n          <div className=\"col form-inline align-items-center\">\r\n            <label className=\"mr-4 col-form-label font-weight-bold\">Mode</label>\r\n            <div className=\"mr-3 form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"simplex\"\r\n                value=\"simplex\"\r\n                checked={this.props.mode === \"simplex\"}\r\n                onChange={this.handleModeChange}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"simplex\">\r\n                Simplex\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check form-check-inline\">\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"radio\"\r\n                name=\"inlineRadioOptions\"\r\n                id=\"random\"\r\n                value=\"random\"\r\n                checked={this.props.mode === \"random\"}\r\n                onChange={this.handleModeChange}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"random\">\r\n                Random\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <td />\r\n      </tr>\r\n    );\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <h1>Find Your Favorite!</h1>\r\n        <p className=\"lead text-muted\">\r\n          This is a demostration of an interactive system for finding your\r\n          favorite car in a used car database. <br />\r\n          Enter your acceptable range for each attribute (leave blank to use the\r\n          default). <br />\r\n          You will be presented two cars each time and you need to choose the\r\n          one you favor more. <br />\r\n          Click the \"Start\" button to find your favorite car in the database!{\" \"}\r\n          <br />\r\n        </p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th className=\"hidden\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n            style={{ width: \"8rem\" }}\r\n            onClick={this.handleStart}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, points, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  points,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  setLeftPoints,\r\n  prunePoints,\r\n  updateConvexHull\r\n} from \"../actions\";\r\nimport {\r\n  array2Vector2D,\r\n  vector2Array,\r\n  getPrunedIndices,\r\n  vector2Array2D\r\n} from \"../utils\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\nclass Interaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      array2Vector2D(this.props.candidates),\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    this.props.setLeftPoints(vector2Array(this.prevIndices));\r\n    if (this.prevIndices.size() < 2) {\r\n      this.state = { pair: [] };\r\n      this.stopInteraction();\r\n    } else {\r\n      const convexHullVertices = vector2Array2D(\r\n        window.Module.readConvexHullVertices()\r\n      );\r\n      this.props.updateConvexHull(convexHullVertices);\r\n      const indices = this.runner.nextPair();\r\n      this.state = {\r\n        pair: vector2Array(indices)\r\n      };\r\n    }\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const convexHullVertices = vector2Array2D(\r\n      window.Module.readConvexHullVertices()\r\n    );\r\n    this.props.updateConvexHull(convexHullVertices);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const questioNo = this.props.numLeftPoints.length;\r\n    this.props.prunePoints(prunedIndices, questioNo);\r\n    this.prevIndices = currIndices;\r\n    if (currIndices.size() < 2) {\r\n      this.stopInteraction();\r\n    } else {\r\n      const indices = this.runner.nextPair();\r\n      this.setState({\r\n        pair: vector2Array(indices)\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    this.props.showResult();\r\n  };\r\n\r\n  render() {\r\n    const ths = [<th key=\"Option No.\">Option</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    ths.push(<th key=\"chooseButton\" />);\r\n\r\n    const trs = this.state.pair.map((idx, i) => {\r\n      const tds = [<td key=\"Option No.\">{i + 1}</td>];\r\n      this.props.candidates[idx].forEach((x, j) => {\r\n        tds.push(<td key={j}>{x}</td>);\r\n      });\r\n      tds.push(\r\n        <td key=\"chooseButton\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={() => this.choose(i)}\r\n          >\r\n            Choose\r\n          </button>\r\n        </td>\r\n      );\r\n      return (\r\n        <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n          {tds}\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div>\r\n        <h2>Your Choice</h2>\r\n        <h4>\r\n          Q{this.props.numLeftPoints.length}: Choose the Car You Favor More\r\n          among the Following Options\r\n        </h4>\r\n        <div className=\"row justify-content-center align-items-center\">\r\n          <div className=\"col-md-8\">\r\n            <table className=\"table table-hover text-center\">\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{trs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-md-1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.stopInteraction}\r\n            >\r\n              Stop\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numLeftPoints,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: () => {\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  setLeftPoints: indices => {\r\n    dispatch(setLeftPoints(indices));\r\n  },\r\n  prunePoints: (indices, step) => {\r\n    dispatch(prunePoints(indices, step));\r\n  },\r\n  updateConvexHull: vertices => {\r\n    dispatch(updateConvexHull(vertices));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Interaction);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  Hint,\r\n  VerticalBarSeries,\r\n  ChartLabel\r\n} from \"react-vis\";\r\n\r\nclass Histogram extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hintValue: null\r\n    };\r\n  }\r\n\r\n  _onMouseLeave = () => {\r\n    this.setState({\r\n      hintValue: null\r\n    });\r\n  };\r\n\r\n  _onNearestX = (value, { index }) => {\r\n    this.setState({\r\n      hintValue: this.props.data[index]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>No. of Cars Left vs. No. of Questions Asked</h4>\r\n        <XYPlot onMouseLeave={this._onMouseLeave} height={400} width={400}>\r\n          <XAxis\r\n            tickValues={this.props.data.map((val, idx) => idx)}\r\n            tickFormat={value => value.toString()}\r\n            style={{\r\n              ticks: { fill: \"black\" }\r\n            }}\r\n          />\r\n          <YAxis\r\n            style={{\r\n              ticks: { fill: \"black\" }\r\n            }}\r\n          />\r\n          <ChartLabel\r\n            text=\"Question No.\"\r\n            includeMargin={false}\r\n            xPercent={0.82}\r\n            yPercent={1.06}\r\n            style={{\r\n              style: { fill: \"black\" }\r\n            }}\r\n          />\r\n          <ChartLabel\r\n            text=\"No. of Cars Left\"\r\n            includeMargin={false}\r\n            xPercent={-0.01}\r\n            yPercent={0.05}\r\n            style={{\r\n              transform: \"rotate(-90)\",\r\n              textAnchor: \"end\",\r\n              style: { fill: \"black\" }\r\n            }}\r\n          />\r\n          <VerticalBarSeries\r\n            color=\"rgb(0, 123, 255)\"\r\n            onNearestX={this._onNearestX}\r\n            data={this.props.data}\r\n            animation\r\n          />\r\n          {this.state.hintValue && (\r\n            <Hint value={this.state.hintValue}>\r\n              <p style={{ color: \"black\" }}>\r\n                Q{this.state.hintValue.x}: {this.state.hintValue.y} Cars Left\r\n              </p>\r\n            </Hint>\r\n          )}\r\n        </XYPlot>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ numLeftPoints }) => ({\r\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\r\n});\r\n\r\nexport default connect(mapStateToProps)(Histogram);\r\n","import * as THREE from \"three\";\r\nwindow.THREE = THREE;\r\nrequire(\"three/examples/js/controls/OrbitControls\");\r\nrequire(\"three/examples/js/QuickHull\");\r\nrequire(\"three/examples/js/geometries/ConvexGeometry\");\r\n\r\nexport default THREE;\r\n","import React from \"react\";\r\nimport THREE from \"./three\";\r\n\r\nclass ConvexHull extends React.Component {\r\n  componentDidMount() {\r\n    const width = this.mount.clientWidth;\r\n    const height = this.mount.clientHeight;\r\n\r\n    this.scene = new THREE.Scene();\r\n\r\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\r\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\r\n    this.camera.position.set(1.5, 1.5, 1.5);\r\n    this.controls.update();\r\n\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.setClearColor(0xffffff);\r\n    this.renderer.setSize(width, height);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    const axes = new THREE.AxesHelper(1);\r\n    this.scene.add(axes);\r\n    this.drawGeometry();\r\n    this.start();\r\n  }\r\n\r\n  drawGeometry = () => {\r\n    if (this.props.vertices.length < 4) return;\r\n    const points = this.props.vertices.map(\r\n      vertex => new THREE.Vector3(...vertex)\r\n    );\r\n    const geometry = new THREE.ConvexGeometry(points);\r\n    const material = new THREE.MeshBasicMaterial({\r\n      color: 0xff0000,\r\n      //shading: THREE.FlatShading,\r\n      polygonOffset: true,\r\n      polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n      polygonOffsetUnits: 1,\r\n      opacity: 0.5,\r\n      transparent: true\r\n    });\r\n    this.mesh = new THREE.Mesh(geometry, material);\r\n    const geo = new THREE.EdgesGeometry(geometry); // or WireframeGeometry\r\n    const mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 2 });\r\n    const wireframe = new THREE.LineSegments(geo, mat);\r\n    this.mesh.add(wireframe);\r\n    this.scene.add(this.mesh);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.vertices !== prevProps.vertices) {\r\n      if (this.mesh) {\r\n        this.scene.remove(this.mesh);\r\n        this.mesh.geometry.dispose();\r\n        this.mesh.material.dispose();\r\n      }\r\n      this.drawGeometry();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  start = () => {\r\n    if (!this.frameId) {\r\n      this.frameId = window.requestAnimationFrame(this.animate);\r\n    }\r\n  };\r\n\r\n  stop = () => {\r\n    window.cancelAnimationFrame(this.frameId);\r\n  };\r\n\r\n  animate = () => {\r\n    this.controls.update();\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ width: \"25rem\", height: \"25rem\" }}\r\n        ref={mount => {\r\n          this.mount = mount;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConvexHull;\r\n","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Line({ color }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"2rem\",\r\n        alignItems: \"center\",\r\n        display: \"flex\"\r\n      }}\r\n    >\r\n      <div style={{ width: \"100%\", height: \"2px\", backgroundColor: color }} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SlideItem({ text }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"2rem\",\r\n        alignItems: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\"\r\n      }}\r\n    >\r\n      {text}\r\n    </div>\r\n  );\r\n}\r\n\r\nclass Legend extends React.Component {\r\n  render() {\r\n    const settings = {\r\n      dots: false,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 3,\r\n      slidesToScroll: 1,\r\n      vertical: true,\r\n      verticalSwiping: true,\r\n      arrows: false,\r\n      swipeToSlide: true,\r\n      afterChange: this.props.changeStartingIndex\r\n    };\r\n    return (\r\n      <div\r\n        title=\"Each axis has a length of 1. Click the arrows to change the selected\r\n      attributes for displaying convex hull.\"\r\n      >\r\n        <div\r\n          style={{\r\n            alignItems: \"center\",\r\n            width: \"4rem\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"middle\"\r\n          }}\r\n        >\r\n          <Line color=\"#ff0000\" />\r\n          <Line color=\"#00ff00\" />\r\n          <Line color=\"#0000ff\" />\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"8rem\",\r\n            display: \"inline-block\",\r\n            verticalAlign: \"middle\"\r\n          }}\r\n        >\r\n          <div\r\n            onClick={() => this.slider.slickPrev()}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleUp} />\r\n          </div>\r\n          <Slider {...settings} ref={self => (this.slider = self)}>\r\n            <SlideItem text=\"Price (USD)\" />\r\n            <SlideItem text=\"Year\" />\r\n            <SlideItem text=\"Power (HP)\" />\r\n            <SlideItem text=\"Used KM\" />\r\n          </Slider>\r\n          <div\r\n            onClick={() => this.slider.slickNext()}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <FontAwesomeIcon icon={faAngleDown} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Legend;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ConvexHull from \"./ConvexHull\";\r\nimport Legend from \"./Legend\";\r\n\r\nclass PreferencePlane extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      index: 0,\r\n      convexHullVertices: props.vertices.map(vert => vert.slice(0, 3))\r\n    };\r\n  }\r\n\r\n  updateContextHullVertices = index => {\r\n    const convexHullVertices = this.props.vertices.map(vertext => {\r\n      const vert = [];\r\n      for (let i = 0; i < 3; ++i) {\r\n        vert.push(vertext[(i + index) % 4]);\r\n      }\r\n      return vert;\r\n    });\r\n    this.setState({ convexHullVertices });\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.vertices !== prevProps.vertices) {\r\n      this.updateContextHullVertices(this.state.index);\r\n    }\r\n  }\r\n\r\n  changeStartingIndex = index => {\r\n    this.setState({ index });\r\n    // explicitly pass index to this.updateContextHullVertices\r\n    // because this.state.index is not updated immediately,\r\n    // i.e., this.state.index has still the old value at this line.\r\n    this.updateContextHullVertices(index);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h4>Convex Hull of Preference Plane</h4>\r\n        <ConvexHull vertices={this.state.convexHullVertices} />\r\n        <div style={{ position: \"absolute\", top: \"2rem\", left: \"20rem\" }}>\r\n          <Legend changeStartingIndex={this.changeStartingIndex} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vertices }) => ({ vertices });\r\n\r\nexport default connect(mapStateToProps)(PreferencePlane);\r\n","import React from \"react\";\r\nimport Histogram from \"./Histogram\";\r\nimport PreferencePlane from \"./PreferencePlane\";\r\n\r\nfunction Visuals() {\r\n  return (\r\n    <div>\r\n      <h2>Visuals</h2>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\r\n          <Histogram />\r\n        </div>\r\n        <div className=\"col-6\" style={{ minWidth: \"500px\" }}>\r\n          <PreferencePlane />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Visuals;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map(([idx, step], i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {[step, ...this.props.candidates[idx]].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((idx, i) => (\r\n      <tr key={i} data-toggle=\"tooltip\" title={this.props.labels[idx]}>\r\n        {this.props.candidates[idx].map((x, j) => (\r\n          <td key={j}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div>\r\n        <h2>Statistics</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h4>The No. of Cars Pruned: {this.props.prunedPoints.length}</h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": prunedTrs.length > 7\r\n              })}\r\n            >\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{prunedTrs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col\">\r\n            <h4>\r\n              The No. of Cars Left in the Database:{\" \"}\r\n              {this.props.leftPoints.length}\r\n            </h4>\r\n            <table\r\n              className={classNames(\"table\", \"table-hover\", {\r\n                \"table-fixed\": leftTrs.length > 7\r\n              })}\r\n            >\r\n              <thead>\r\n                <tr>{ths.slice(1)}</tr>\r\n              </thead>\r\n              <tbody>{leftTrs}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\r\nimport Question from \"./Question\";\r\nimport Visuals from \"./Visuals\";\r\nimport Stats from \"./Stats\";\r\n\r\nfunction Interaction() {\r\n  return (\r\n    <div>\r\n      <Question />\r\n      <Visuals />\r\n      <Stats />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Interaction;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\nfunction Result({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints,\r\n  restart\r\n}) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((idx, i) => (\r\n    <tr key={i} data-toggle=\"tooltip\" title={labels[idx]}>\r\n      {candidates[idx].map((x, j) => (\r\n        <td key={j}>{x}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"justify-content-center\">\r\n      <h4>The Total No. of Questions Asked is: {numLeftPoints.length - 1}.</h4>\r\n      <h4>\r\n        {leftPoints.length === 1\r\n          ? \"Your Favourite Car is:\"\r\n          : `${leftPoints.length} Cars Left in the Database:`}\r\n      </h4>\r\n      <table\r\n        className={classNames(\"table\", \"table-hover\", {\r\n          \"table-fixed\": trs.length > 7\r\n        })}\r\n      >\r\n        <thead>\r\n          <tr>{ths}</tr>\r\n        </thead>\r\n        <tbody>{trs}</tbody>\r\n      </table>\r\n      <div className=\"d-flex justify-content-center\">\r\n        <Histogram />\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n}) => ({\r\n  labels,\r\n  candidates,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numLeftPoints\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ activeComponent }) {\r\n  if (activeComponent === \"Welcome\") {\r\n    return <Welcome />;\r\n  } else if (activeComponent === \"Interaction\") {\r\n    return <Interaction />;\r\n  } else if (activeComponent === \"Result\") {\r\n    return <Result />;\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\nimport { loadDataset } from \"./utils\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: async function() {\r\n    const [points, labels] = await loadDataset(\r\n      \"./datasets/cars.txt\",\r\n      \"./datasets/labelsOfCars.txt\"\r\n    );\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config]) => {\r\n      mask[attr] = 1;\r\n    });\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { points, labels, attributes, mask },\r\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n        window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n"],"sourceRoot":""}