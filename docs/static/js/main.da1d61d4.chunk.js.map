{"version":3,"sources":["actions/index.js","reducers/index.js","components/Welcome.js","components/Interaction.js","components/Histogram.js","components/Result.js","components/Stats.js","components/App.js","index.js"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","dataset","attributes","candidates","mask","forEach","_ref","_ref2","Object","slicedToArray","attr","objectSpread","numQuestions","prunedPoints","concat","toConsumableArray","points","leftPoints","filter","x","indices","includes","numLeftPoints","size","prev","mode","Welcome","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStart","ranges","window","Module","Ranges","VectorInt","regex","i","_this$props$attribute","config","range","low","high","j","str","inputs","current","value","trim","test","alert","parseInt","push_back","maxPoints","selectCandidates","releasePoints","startAlgorithm","handleModeChange","event","changeMode","target","React","createRef","_this2","trs","map","_ref3","_ref4","disabled","react_default","a","createElement","key","className","placeholder","ref","checked","onChange","toggleMask","style","maxWidth","htmlFor","id","name","width","onClick","Component","connect","_ref5","dispatch","setCandidates","val","defineProperty","SIMPLEX","RANDOM","point2Array","point","arr","dim","push","get","points2Array2D","Interaction","choose","idx","option","runner","currIndices","getCandidatesIndices","prunedIndices","prevIndices","getPrunedIndices","prunePoints","incrementQCount","stopInteraction","nextPair","setState","pair","showResult","smallerBetter","AlgorithmRunner","p","setLeftPoints","ths","tds","Histogram","_onMouseLeave","hintValue","_onNearestX","index","data","num","y","react_vis_es","onMouseLeave","height","tickValues","tickFormat","scale","tickTotal","toString","text","includeMargin","xPercent","yPercent","transform","textAnchor","onNearestX","color","restart","th","slice","components_Histogram","Stats","prunedTrs","leftTrs","components_Welcome","components_Interaction","components_Stats","components_Result","onRuntimeInitialized","Dataset","store","createStore","rootReducer","render","es","components_App","document","getElementById","script","src","async","body","appendChild"],"mappings":"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","file":"static/js/main.da1d61d4.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const INCREMENT_QCOUNT = \"INCREMENT_QCOUNT\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (dataset, attributes) => ({\r\n  type: SET_DATASET,\r\n  dataset,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const incrementQCount = () => ({\r\n  type: INCREMENT_QCOUNT\r\n});\r\n\r\nexport const prunePoints = (points, indices) => ({\r\n  type: PRUNE_POINTS,\r\n  points,\r\n  indices\r\n});\r\n\r\nexport const setLeftPoints = points => ({\r\n  type: SET_LEFT_POINTS,\r\n  points\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  INCREMENT_QCOUNT,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst dataset = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.dataset;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst numQuestions = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return 0;\r\n    case INCREMENT_QCOUNT:\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, step no., attributes]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      return [...action.points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, attributes...]\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return action.points;\r\n    case PRUNE_POINTS:\r\n      return state.filter(x => !action.indices.includes(x[0]));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return [action.candidates.size()];\r\n    case SET_LEFT_POINTS:\r\n      return [...state, action.points.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.points.length];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  dataset,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  numQuestions,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n  }\r\n\r\n  handleStart = () => {\r\n    const ranges = new window.Module.Ranges();\r\n    const mask = new window.Module.VectorInt();\r\n    const regex = /^\\d+$/;\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value.trim();\r\n          if (str === \"\") continue;\r\n          else if (regex.test(str)) range[j] = parseInt(str);\r\n          else {\r\n            alert(`${str} in ${attr} range is not an integer`);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      ranges.push_back(range);\r\n      mask.push_back(this.props.mask[attr]);\r\n    }\r\n    let maxPoints = 1000;\r\n    const str = this.inputs.maxPoints.current.value.trim();\r\n    if (str !== \"\" && regex.test(str)) maxPoints = parseInt(str);\r\n    const candidates = this.props.dataset.selectCandidates(\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.size() === 0) {\r\n      window.Module.releasePoints(candidates);\r\n      alert(\"No matching cars, try larger ranges\");\r\n      return;\r\n    }\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const trs = this.props.attributes.map(([attr, config]) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td className=\"align-middle\">{attr}</td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle hidden\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <h1>Find Your Favorite!</h1>\r\n        <p className=\"lead text-muted\">\r\n          This is a demostration of an interactive system for finding your favorite car in a used car database. <br />\r\n          Enter your acceptable range for each attribute (leave blank to use the default). <br />\r\n          You will be presented two cars each time and you need to choose the one you favor more. <br />\r\n          Click the \"Start\" button to find your favorite car in the database! <br />\r\n        </p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th className=\"hidden\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <form>\r\n          <div className=\"form-group row align-items-center\">\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label htmlFor=\"maxPoints\" className=\"col-4 col-form-label\">\r\n                  Max No. of Cars\r\n                </label>\r\n                <div className=\"col\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"maxPoints\"\r\n                    placeholder=\"1000\"\r\n                    ref={this.inputs.maxPoints}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label className=\"col-4 col-form-label\">Mode</label>\r\n                <div className=\"col text-left\">\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"simplex\"\r\n                      value=\"simplex\"\r\n                      checked={this.props.mode === \"simplex\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"simplex\">\r\n                      Simplex\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"random\"\r\n                      value=\"random\"\r\n                      checked={this.props.mode === \"random\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"random\">\r\n                      Random\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                style={{ width: \"8rem\" }}\r\n                onClick={this.handleStart}\r\n              >\r\n                Start\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, dataset, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  dataset,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  incrementQCount,\r\n  setLeftPoints,\r\n  prunePoints\r\n} from \"../actions\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\nfunction getPrunedIndices(prevIndices, currIndices) {\r\n  let prunedIndices = [];\r\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size();) {\r\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\r\n      prunedIndices.push(prevIndices.get(i));\r\n      ++i;\r\n    } else {\r\n      ++i;\r\n      ++j;\r\n    }\r\n  }\r\n  return prunedIndices;\r\n}\r\n\r\nfunction point2Array(point) {\r\n  let arr = [];\r\n  for (let i = 0; i < point.dim(); ++i) {\r\n    arr.push(point.get(i));\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction points2Array2D(points) {\r\n  let arr = [];\r\n  for (let i = 0; i < points.size(); ++i) {\r\n    arr.push(point2Array(points.get(i)));\r\n  }\r\n  return arr;\r\n}\r\n\r\nclass Interaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      this.props.candidates,\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    let leftPoints = [];\r\n    for (let i = 0; i < this.prevIndices.size(); ++i) {\r\n      const idx = this.prevIndices.get(i);\r\n      const point = this.props.candidates.get(idx);\r\n      const p = [idx, ...point2Array(point)];\r\n      leftPoints.push(p);\r\n    }\r\n    this.props.setLeftPoints(leftPoints);\r\n    if (this.prevIndices.size() < 2) {\r\n      this.state = { pair: [] };\r\n      this.stopInteraction();\r\n    } else {\r\n      this.state = {\r\n        pair: points2Array2D(this.runner.nextPair())\r\n      };\r\n    }\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const prunedPoints = prunedIndices.map(idx => {\r\n      const point = this.props.candidates.get(idx);\r\n      return [idx, this.props.numQuestions + 1, ...point2Array(point)];\r\n    });\r\n    this.props.prunePoints(prunedPoints, prunedIndices);\r\n    this.prevIndices = currIndices;\r\n    this.props.incrementQCount();\r\n    if (this.prevIndices.size() < 2) {\r\n      this.stopInteraction();\r\n    } else {\r\n      const nextPair = points2Array2D(this.runner.nextPair());\r\n      this.setState({\r\n        pair: nextPair\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    window.Module.releasePoints(this.props.candidates);\r\n    this.props.showResult();\r\n  }\r\n\r\n  render() {\r\n    const ths = [<th key=\"Option No.\">Option</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    ths.push(<th key=\"chooseButton\" />);\r\n\r\n    const trs = this.state.pair.map((point, idx) => {\r\n      const tds = [<td key=\"Option No.\">{idx + 1}</td>];\r\n      point.forEach((x, i) => {\r\n        tds.push(<td key={i}>{x}</td>);\r\n      });\r\n      tds.push(\r\n        <td key=\"chooseButton\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={() => this.choose(idx)}\r\n          >\r\n            Choose\r\n          </button>\r\n        </td>\r\n      );\r\n      return <tr key={idx}>{tds}</tr>;\r\n    });\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <h4>Q{this.props.numQuestions + 1}: Choose the Car You Favor More among the Following Options</h4>\r\n          <table className=\"table table-hover text-center\">\r\n            <thead>\r\n              <tr>{ths}</tr>\r\n            </thead>\r\n            <tbody>{trs}</tbody>\r\n          </table>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.stopInteraction}>\r\n            Stop\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n}) => ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: () => {\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  incrementQCount: () => {\r\n    dispatch(incrementQCount());\r\n  },\r\n  setLeftPoints: leftPoints => {\r\n    dispatch(setLeftPoints(leftPoints));\r\n  },\r\n  prunePoints: (points, indices) => {\r\n    dispatch(prunePoints(points, indices));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Interaction);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { XYPlot, XAxis, YAxis, Hint, VerticalBarSeries, ChartLabel } from 'react-vis';\r\n\r\nclass Histogram extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hintValue: null\r\n    }\r\n    this.data = props.numLeftPoints.map((num, i) => ({ x: i, y: num }));\r\n  }\r\n\r\n  _onMouseLeave = () => {\r\n    this.setState({\r\n      hintValue: null\r\n    });\r\n  }\r\n\r\n  _onNearestX = (value, { index }) => {\r\n    this.setState({\r\n      hintValue: this.data[index]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <XYPlot onMouseLeave={this._onMouseLeave} height={400} width={400}>\r\n        <XAxis\r\n          tickValues={this.props.numLeftPoints.map((num, i) => i)}\r\n          tickFormat={(value, index, scale, tickTotal) => value.toString()}\r\n        />\r\n        <YAxis />\r\n        <ChartLabel\r\n          text=\"Question No.\"\r\n          includeMargin={false}\r\n          xPercent={0.85}\r\n          yPercent={1.06}\r\n        />\r\n        <ChartLabel\r\n          text=\"No. of Cars Left\"\r\n          includeMargin={false}\r\n          xPercent={-0.01}\r\n          yPercent={0.05}\r\n          style={{\r\n            transform: 'rotate(-90)',\r\n            textAnchor: 'end'\r\n          }}\r\n        />\r\n        <VerticalBarSeries onNearestX={this._onNearestX} data={this.data} />\r\n        {\r\n          this.state.hintValue &&\r\n          <Hint value={this.state.hintValue}>\r\n            <p style={{ color: 'rgb(90, 90, 90)' }}>Q{this.state.hintValue.x}: {this.state.hintValue.y} Cars Left</p>\r\n          </Hint>\r\n        }\r\n      </XYPlot>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ numLeftPoints }) => ({ numLeftPoints });\r\n\r\nexport default connect(mapStateToProps)(Histogram);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\nfunction Result({ leftPoints, attributes, mask, numQuestions, restart }) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((point, idx) => (\r\n    <tr key={idx}>\r\n      {point.slice(1).map((x, idx) => (\r\n        <td key={idx}>{x}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col\">\r\n        <h4>\r\n          The Total No. of Questions Asked is: {numQuestions}.\r\n        </h4>\r\n        <h4>\r\n          {\r\n            leftPoints.length === 1 ?\r\n              \"Your Favourite Car is:\" :\r\n              `${leftPoints.length} Cars Left in the Database:`\r\n          }\r\n        </h4>\r\n        <table className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>\r\n            {trs}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Histogram />\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ leftPoints, attributes, mask, numQuestions }) => ({\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>The No. of Cars We Have Pruned: {this.props.prunedPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths}</tr>\r\n            </thead>\r\n            <tbody>{prunedTrs}</tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>The No. of Cars Left in the Database: {this.props.leftPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths.slice(1)}</tr>\r\n            </thead>\r\n            <tbody>{leftTrs}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n}) => ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport Stats from \"./Stats\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ activeComponent }) {\r\n  if (activeComponent === \"Welcome\") {\r\n    return <Welcome />;\r\n  } else if (activeComponent === \"Interaction\") {\r\n    return (\r\n      <div>\r\n        <Interaction />\r\n        <Stats />\r\n      </div>\r\n    );\r\n  } else if (activeComponent === \"Result\") {\r\n    return <Result />;\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: function() {\r\n    const dataset = new window.Module.Dataset(\"car.txt\");\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config]) => {\r\n      mask[attr] = 1;\r\n    });\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { dataset, attributes, mask }\r\n      //, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n"],"sourceRoot":""}