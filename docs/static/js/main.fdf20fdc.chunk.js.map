{"version":3,"sources":["actions/index.js","reducers/index.js","components/Welcome.js","components/Interaction.js","components/Histogram.js","components/Result.js","components/Stats.js","components/three.js","components/ConvexHull.js","components/Visuals.js","components/App.js","index.js"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","dataset","attributes","candidates","mask","forEach","_ref","_ref2","Object","slicedToArray","attr","objectSpread","numQuestions","prunedPoints","concat","toConsumableArray","points","leftPoints","filter","x","indices","includes","numLeftPoints","prev","mode","vertices","Welcome","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStart","ranges","window","Module","Ranges","VectorInt","regex","i","_this$props$attribute","config","range","low","high","j","str","inputs","current","value","trim","test","alert","parseInt","push_back","maxPoints","selectCandidates","size","releasePoints","startAlgorithm","handleModeChange","event","changeMode","target","React","createRef","_this2","trs","map","_ref3","_ref4","disabled","react_default","a","createElement","key","className","placeholder","ref","checked","onChange","toggleMask","style","maxWidth","htmlFor","id","name","width","onClick","Component","connect","_ref5","dispatch","setCandidates","val","defineProperty","SIMPLEX","RANDOM","point2Array","point","arr","dim","push","get","points2Array2D","Interaction","choose","idx","option","runner","convexHullVertices","read_convex_hull_vertices","updateConvexHull","currIndices","getCandidatesIndices","prunedIndices","prevIndices","getPrunedIndices","prunePoints","incrementQCount","stopInteraction","nextPair","setState","pair","showResult","smallerBetter","AlgorithmRunner","p","setLeftPoints","ths","tds","verts","vertex","vert","parseVertices","Histogram","_onMouseLeave","hintValue","_onNearestX","index","data","react_vis_es","onMouseLeave","height","tickValues","tickFormat","toString","text","includeMargin","xPercent","yPercent","transform","textAnchor","color","onNearestX","animation","y","num","restart","th","slice","components_Histogram","Stats","prunedTrs","leftTrs","THREE","require","ConvexHull","drawGeometry","construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","opacity","transparent","mesh","Mesh","geo","EdgesGeometry","mat","LineBasicMaterial","linewidth","wireframe","LineSegments","add","Geometry","Line","scene","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","clientHeight","Scene","PerspectiveCamera","OrbitControls","position","set","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","AxesHelper","prevProps","remove","dispose","removeChild","margin","Visuals","minWidth","components_ConvexHull","components_Welcome","components_Interaction","components_Visuals","components_Stats","components_Result","onRuntimeInitialized","Dataset","store","createStore","rootReducer","es","components_App","document","getElementById","script","src","async","body"],"mappings":"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","file":"static/js/main.fdf20fdc.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const INCREMENT_QCOUNT = \"INCREMENT_QCOUNT\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\nexport const UPDATE_CONVEX_HULL = \"UPDATE_CONVEX_HULL\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (dataset, attributes) => ({\r\n  type: SET_DATASET,\r\n  dataset,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const incrementQCount = () => ({\r\n  type: INCREMENT_QCOUNT\r\n});\r\n\r\nexport const prunePoints = (points, indices) => ({\r\n  type: PRUNE_POINTS,\r\n  points,\r\n  indices\r\n});\r\n\r\nexport const setLeftPoints = points => ({\r\n  type: SET_LEFT_POINTS,\r\n  points\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n\r\nexport const updateConvexHull = (vertices) => ({\r\n  type: UPDATE_CONVEX_HULL,\r\n  vertices\r\n});","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  INCREMENT_QCOUNT,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART,\r\n  UPDATE_CONVEX_HULL\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst dataset = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.dataset;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst numQuestions = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return 0;\r\n    case INCREMENT_QCOUNT:\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, step no., attributes]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      return [...action.points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, attributes...]\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return action.points;\r\n    case PRUNE_POINTS:\r\n      return state.filter(x => !action.indices.includes(x[0]));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.points.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.points.length];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst vertices = (state = [], action) => {\r\n  switch (action.type) {\r\n    case UPDATE_CONVEX_HULL:\r\n      return action.vertices;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  dataset,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  numQuestions,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode,\r\n  vertices\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n  }\r\n\r\n  handleStart = () => {\r\n    const ranges = new window.Module.Ranges();\r\n    const mask = new window.Module.VectorInt();\r\n    const regex = /^\\d+$/;\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value.trim();\r\n          if (str === \"\") continue;\r\n          else if (regex.test(str)) range[j] = parseInt(str);\r\n          else {\r\n            alert(`${str} in ${attr} range is not an integer`);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      ranges.push_back(range);\r\n      mask.push_back(this.props.mask[attr]);\r\n    }\r\n    let maxPoints = 1000;\r\n    const str = this.inputs.maxPoints.current.value.trim();\r\n    if (str !== \"\" && regex.test(str)) maxPoints = parseInt(str);\r\n    const candidates = this.props.dataset.selectCandidates(\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.size() === 0) {\r\n      window.Module.releasePoints(candidates);\r\n      alert(\"No matching cars, try larger ranges\");\r\n      return;\r\n    }\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const trs = this.props.attributes.map(([attr, config]) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td className=\"align-middle\">{attr}</td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle hidden\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <h1>Find Your Favorite!</h1>\r\n        <p className=\"lead text-muted\">\r\n          This is a demostration of an interactive system for finding your favorite car in a used car database. <br />\r\n          Enter your acceptable range for each attribute (leave blank to use the default). <br />\r\n          You will be presented two cars each time and you need to choose the one you favor more. <br />\r\n          Click the \"Start\" button to find your favorite car in the database! <br />\r\n        </p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th className=\"hidden\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <form>\r\n          <div className=\"form-group row align-items-center\">\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label htmlFor=\"maxPoints\" className=\"col-4 col-form-label\">\r\n                  Max No. of Cars\r\n                </label>\r\n                <div className=\"col\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"maxPoints\"\r\n                    placeholder=\"1000\"\r\n                    ref={this.inputs.maxPoints}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label className=\"col-4 col-form-label\">Mode</label>\r\n                <div className=\"col text-left\">\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"simplex\"\r\n                      value=\"simplex\"\r\n                      checked={this.props.mode === \"simplex\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"simplex\">\r\n                      Simplex\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"random\"\r\n                      value=\"random\"\r\n                      checked={this.props.mode === \"random\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"random\">\r\n                      Random\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                style={{ width: \"8rem\" }}\r\n                onClick={this.handleStart}\r\n              >\r\n                Start\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, dataset, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  dataset,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  incrementQCount,\r\n  setLeftPoints,\r\n  prunePoints,\r\n  updateConvexHull\r\n} from \"../actions\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\nfunction getPrunedIndices(prevIndices, currIndices) {\r\n  let prunedIndices = [];\r\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size();) {\r\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\r\n      prunedIndices.push(prevIndices.get(i));\r\n      ++i;\r\n    } else {\r\n      ++i;\r\n      ++j;\r\n    }\r\n  }\r\n  return prunedIndices;\r\n}\r\n\r\nfunction point2Array(point) {\r\n  let arr = [];\r\n  for (let i = 0; i < point.dim(); ++i) {\r\n    arr.push(point.get(i));\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction points2Array2D(points) {\r\n  let arr = [];\r\n  for (let i = 0; i < points.size(); ++i) {\r\n    arr.push(point2Array(points.get(i)));\r\n  }\r\n  return arr;\r\n}\r\n\r\nclass Interaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      this.props.candidates,\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    let leftPoints = [];\r\n    for (let i = 0; i < this.prevIndices.size(); ++i) {\r\n      const idx = this.prevIndices.get(i);\r\n      const point = this.props.candidates.get(idx);\r\n      const p = [idx, ...point2Array(point)];\r\n      leftPoints.push(p);\r\n    }\r\n    this.props.setLeftPoints(leftPoints);\r\n    if (leftPoints.length < 2) {\r\n      this.state = { pair: [] };\r\n      this.stopInteraction();\r\n    } else {\r\n      const convexHullVertices = window.Module.read_convex_hull_vertices();\r\n      this.props.updateConvexHull(convexHullVertices);\r\n      this.state = {\r\n        pair: points2Array2D(this.runner.nextPair())\r\n      };\r\n    }\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const convexHullVertices = window.Module.read_convex_hull_vertices();\r\n    this.props.updateConvexHull(convexHullVertices);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const prunedPoints = prunedIndices.map(idx => {\r\n      const point = this.props.candidates.get(idx);\r\n      return [idx, this.props.numQuestions + 1, ...point2Array(point)];\r\n    });\r\n    this.props.prunePoints(prunedPoints, prunedIndices);\r\n    this.prevIndices = currIndices;\r\n    this.props.incrementQCount();\r\n    if (this.prevIndices.size() < 2) {\r\n      this.stopInteraction();\r\n    } else {\r\n      const nextPair = points2Array2D(this.runner.nextPair());\r\n      this.setState({\r\n        pair: nextPair\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    window.Module.releasePoints(this.props.candidates);\r\n    this.props.showResult();\r\n  }\r\n\r\n  render() {\r\n    const ths = [<th key=\"Option No.\">Option</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    ths.push(<th key=\"chooseButton\" />);\r\n\r\n    const trs = this.state.pair.map((point, idx) => {\r\n      const tds = [<td key=\"Option No.\">{idx + 1}</td>];\r\n      point.forEach((x, i) => {\r\n        tds.push(<td key={i}>{x}</td>);\r\n      });\r\n      tds.push(\r\n        <td key=\"chooseButton\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={() => this.choose(idx)}\r\n          >\r\n            Choose\r\n          </button>\r\n        </td>\r\n      );\r\n      return <tr key={idx}>{tds}</tr>;\r\n    });\r\n    return (\r\n      <div>\r\n        <h4>Q{this.props.numQuestions + 1}: Choose the Car You Favor More among the Following Options</h4>\r\n        <div className=\"row justify-content-center align-items-center\">\r\n          <div className=\"col-md-8\">\r\n            \r\n            <table className=\"table table-hover text-center\">\r\n              <thead>\r\n                <tr>{ths}</tr>\r\n              </thead>\r\n              <tbody>{trs}</tbody>\r\n            </table>\r\n          </div>\r\n          <div className=\"col-md-2\">\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.stopInteraction}>\r\n              Stop\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n}) => ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n});\r\n\r\nfunction parseVertices(vertices) {\r\n  if (vertices.size() < 1 || vertices.get(0).size() < 2) return [];\r\n  const verts = [];\r\n  for (let i = 0; i < vertices.size(); ++i) {\r\n    const vertex = vertices.get(i);\r\n    const vert = [];\r\n    for (let j = 0; j < vertex.size() - 1; ++j) {\r\n      vert.push(vertex.get(j));\r\n    }\r\n    verts.push(vert);\r\n  }\r\n  return verts;\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: () => {\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  incrementQCount: () => {\r\n    dispatch(incrementQCount());\r\n  },\r\n  setLeftPoints: leftPoints => {\r\n    dispatch(setLeftPoints(leftPoints));\r\n  },\r\n  prunePoints: (points, indices) => {\r\n    dispatch(prunePoints(points, indices));\r\n  },\r\n  updateConvexHull: (vertices) => {\r\n    dispatch(updateConvexHull(parseVertices(vertices)))\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Interaction);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { XYPlot, XAxis, YAxis, Hint, VerticalBarSeries, ChartLabel } from 'react-vis';\r\n\r\nclass Histogram extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hintValue: null\r\n    }\r\n  }\r\n\r\n  _onMouseLeave = () => {\r\n    this.setState({\r\n      hintValue: null\r\n    });\r\n  }\r\n\r\n  _onNearestX = (value, { index }) => {\r\n    this.setState({\r\n      hintValue: this.props.data[index]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <XYPlot onMouseLeave={this._onMouseLeave} height={400} width={400}>\r\n        <XAxis\r\n          tickValues={this.props.data.map((val, idx) => idx)}\r\n          tickFormat={value => value.toString()}\r\n        />\r\n        <YAxis />\r\n        <ChartLabel\r\n          text=\"Question No.\"\r\n          includeMargin={false}\r\n          xPercent={0.82}\r\n          yPercent={1.06}\r\n        />\r\n        <ChartLabel\r\n          text=\"No. of Cars Left\"\r\n          includeMargin={false}\r\n          xPercent={-0.01}\r\n          yPercent={0.05}\r\n          style={{\r\n            transform: 'rotate(-90)',\r\n            textAnchor: 'end'\r\n          }}\r\n        />\r\n        <VerticalBarSeries color='rgb(0, 123, 255)' onNearestX={this._onNearestX} data={this.props.data} animation />\r\n        {\r\n          this.state.hintValue &&\r\n          <Hint value={this.state.hintValue}>\r\n            <p style={{ color: 'rgb(90, 90, 90)' }}>Q{this.state.hintValue.x}: {this.state.hintValue.y} Cars Left</p>\r\n          </Hint>\r\n        }\r\n      </XYPlot>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ numLeftPoints }) => ({\r\n  data: numLeftPoints.map((num, i) => ({ x: i, y: num }))\r\n});\r\n\r\nexport default connect(mapStateToProps)(Histogram);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\nfunction Result({ leftPoints, attributes, mask, numQuestions, restart }) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((point, idx) => (\r\n    <tr key={idx}>\r\n      {point.slice(1).map((x, idx) => (\r\n        <td key={idx}>{x}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col\">\r\n        <h4>\r\n          The Total No. of Questions Asked is: {numQuestions}.\r\n        </h4>\r\n        <h4>\r\n          {\r\n            leftPoints.length === 1 ?\r\n              \"Your Favourite Car is:\" :\r\n              `${leftPoints.length} Cars Left in the Database:`\r\n          }\r\n        </h4>\r\n        <table className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>\r\n            {trs}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Histogram />\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ leftPoints, attributes, mask, numQuestions }) => ({\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>The No. of Cars We Have Pruned: {this.props.prunedPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths}</tr>\r\n            </thead>\r\n            <tbody>{prunedTrs}</tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>The No. of Cars Left in the Database: {this.props.leftPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths.slice(1)}</tr>\r\n            </thead>\r\n            <tbody>{leftTrs}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n}) => ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import * as THREE from 'three';\r\nwindow.THREE = THREE;\r\nrequire('three/examples/js/controls/OrbitControls');\r\nrequire('three/examples/js/QuickHull');\r\nrequire('three/examples/js/geometries/ConvexGeometry');\r\n\r\nexport default THREE;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport THREE from './three';\r\n\r\nclass ConvexHull extends React.Component {\r\n  componentDidMount() {\r\n    const width = this.mount.clientWidth\r\n    const height = this.mount.clientHeight\r\n\r\n    this.scene = new THREE.Scene()\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      width / height,\r\n      0.1,\r\n      10\r\n    )\r\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\r\n    this.camera.position.set(1.5, 1.5, 1.5);\r\n    this.controls.update();\r\n\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.setClearColor(0xffffff);\r\n    this.renderer.setSize(width, height);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    this.scene.add(new THREE.AxesHelper(1.5));\r\n    this.start();\r\n  }\r\n\r\n  drawGeometry = () => {\r\n    if (this.props.vertices < 2) return;\r\n    const points = this.props.vertices.map(vertex => new THREE.Vector3(...vertex));\r\n\r\n    if (points.length > 3) {\r\n      const geometry = new THREE.ConvexGeometry(points);\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: 0xff0000,\r\n        //shading: THREE.FlatShading,\r\n        polygonOffset: true,\r\n        polygonOffsetFactor: 1, // positive value pushes polygon further away\r\n        polygonOffsetUnits: 1,\r\n        opacity: 0.5,\r\n        transparent: true\r\n      });\r\n      this.mesh = new THREE.Mesh(geometry, material);\r\n\r\n      const geo = new THREE.EdgesGeometry(geometry); // or WireframeGeometry\r\n      const mat = new THREE.LineBasicMaterial({ color: 0x000000, linewidth: 2 });\r\n      const wireframe = new THREE.LineSegments(geo, mat);\r\n      this.mesh.add(wireframe);\r\n    } else {\r\n      const geometry = new THREE.Geometry();\r\n      points.forEach(point => {\r\n        geometry.vertices.push(point);\r\n      });\r\n      if (points.length === 3) {\r\n        // line geometry is not closed. Add the first point to close the line.\r\n        geometry.vertices.push(points[0]);\r\n      }\r\n      const material = new THREE.LineBasicMaterial({ color: 0x000000 });\r\n      this.mesh = new THREE.Line(geometry, material);\r\n    }\r\n    this.scene.add(this.mesh);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.vertices !== prevProps.vertices) {\r\n      if (this.mesh) {\r\n        this.scene.remove(this.mesh);\r\n        this.mesh.geometry.dispose();\r\n        this.mesh.material.dispose();\r\n      }\r\n      this.drawGeometry();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  start = () => {\r\n    if (!this.frameId) {\r\n      this.frameId = window.requestAnimationFrame(this.animate);\r\n    }\r\n  }\r\n\r\n  stop = () => {\r\n    window.cancelAnimationFrame(this.frameId)\r\n  }\r\n\r\n  animate = () => {\r\n    this.controls.update();\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{ width: '400px', height: '400px', margin: 'auto' }}\r\n        ref={(mount) => { this.mount = mount }}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ vertices }) => ({ vertices });\r\n\r\nexport default connect(mapStateToProps)(ConvexHull);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Histogram from './Histogram';\r\nimport ConvextHull from './ConvexHull';\r\n\r\nclass Visuals extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.attributes.length === 4) {\r\n      return (\r\n        <div className=\"row\" style={{minWidth: '1000px'}}>\r\n          <div className=\"col-6\">\r\n            <h4>No. of Cars Left vs. No. of Questions Asked</h4>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Histogram />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <h4>Convex Hull of Preference Plane</h4>\r\n            <ConvextHull />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div />;\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  attributes,\r\n  mask\r\n}) => ({\r\n  attributes,\r\n  mask\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Visuals);","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport Stats from \"./Stats\";\r\nimport { connect } from \"react-redux\";\r\nimport Visuals from \"./Visuals\";\r\n\r\nfunction App({ activeComponent }) {\r\n  if (activeComponent === \"Welcome\") {\r\n    return <Welcome />;\r\n  } else if (activeComponent === \"Interaction\") {\r\n    return (\r\n      <div>\r\n        <Interaction />\r\n        <Visuals />\r\n        <Stats />\r\n      </div>\r\n    );\r\n  } else if (activeComponent === \"Result\") {\r\n    return <Result />;\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: function() {\r\n    const dataset = new window.Module.Dataset(\"car.txt\");\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config]) => {\r\n      mask[attr] = 1;\r\n    });\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { dataset, attributes, mask }\r\n      //, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n"],"sourceRoot":""}