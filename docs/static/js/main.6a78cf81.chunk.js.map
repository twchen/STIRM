{"version":3,"sources":["actions/index.js","reducers/index.js","components/Welcome.js","components/three.js","components/ConvexHull.js","components/Interaction.js","components/Histogram.js","components/Result.js","components/Stats.js","components/App.js","index.js"],"names":["setActiveComponent","component","type","combineReducers","activeComponent","state","arguments","length","undefined","action","dataset","attributes","candidates","mask","forEach","_ref","_ref2","Object","slicedToArray","attr","objectSpread","numQuestions","prunedPoints","concat","toConsumableArray","points","leftPoints","filter","x","indices","includes","numLeftPoints","prev","mode","Welcome","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleStart","ranges","window","Module","Ranges","VectorInt","regex","i","_this$props$attribute","config","range","low","high","j","str","inputs","current","value","trim","test","alert","parseInt","push_back","maxPoints","selectCandidates","size","releasePoints","startAlgorithm","handleModeChange","event","changeMode","target","React","createRef","_this2","trs","map","_ref3","_ref4","disabled","react_default","a","createElement","key","className","placeholder","ref","checked","onChange","toggleMask","style","maxWidth","htmlFor","id","name","width","onClick","Component","connect","_ref5","dispatch","setCandidates","val","defineProperty","THREE","require","ConvexHull","getRanges","Infinity","tuple","slice","drawGeometry","attrs_scaled","_this$ranges$i","min","construct","Vector3","geometry","ConvexGeometry","material","MeshBasicMaterial","color","wireframe","mesh","Mesh","Geometry","point","vertices","push","LineBasicMaterial","Line","scene","add","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","controls","update","renderer","render","camera","mount","clientWidth","height","clientHeight","Scene","PerspectiveCamera","OrbitControls","position","set","WebGLRenderer","antialias","setClearColor","setSize","appendChild","domElement","AxesHelper","prevProps","remove","dispose","removeChild","margin","SIMPLEX","RANDOM","point2Array","arr","dim","get","points2Array2D","Interaction","choose","idx","option","runner","currIndices","getCandidatesIndices","prunedIndices","prevIndices","getPrunedIndices","prunePoints","incrementQCount","stopInteraction","nextPair","setState","pair","showResult","smallerBetter","AlgorithmRunner","p","setLeftPoints","ths","tds","components_ConvexHull","Histogram","_onMouseLeave","hintValue","_onNearestX","index","data","num","y","react_vis_es","onMouseLeave","tickValues","tickFormat","toString","text","includeMargin","xPercent","yPercent","transform","textAnchor","onNearestX","restart","th","components_Histogram","Stats","prunedTrs","leftTrs","components_Welcome","components_Interaction","components_Stats","components_Result","onRuntimeInitialized","Dataset","store","createStore","rootReducer","es","components_App","document","getElementById","script","src","async","body"],"mappings":"+KAUaA,EAAqB,SAAAC,GAAS,MAAK,CAC9CC,KAXkC,uBAYlCD,cC6GaE,cAAgB,CAC7BC,gBA7GsB,WAA+B,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,UAAWG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOP,MACb,IDfgC,uBCgB9B,OAAOO,EAAOR,UAChB,QACE,OAAOI,IAyGXK,QArGc,WAA0B,IAAzBL,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,OAAQC,EAAOP,MACb,IDtBuB,cCuBrB,OAAOO,EAAOC,QAChB,QACE,OAAOL,IAiGXM,WA7FiB,WAA0B,IAAzBN,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOP,MACb,ID/BuB,cCgCrB,OAAOO,EAAOE,WAChB,QACE,OAAON,IAyFXO,WArFiB,WAA0B,IAAzBP,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOP,MACb,IDzC0B,iBC0CxB,OAAOO,EAAOG,WAChB,QACE,OAAOP,IAiFXQ,KA7EW,WAA0B,IAAzBR,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrC,OAAQC,EAAOP,MACb,IDjDuB,cCkDrB,IAAMW,EAAO,GAIb,OAHAJ,EAAOE,WAAWG,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAlBI,EAAkBH,EAAA,GAAAA,EAAA,GAC5CH,EAAKM,GAAQ,IAERN,EACT,IDtDuB,cCuDrB,OAAOI,OAAAG,EAAA,EAAAH,CAAA,GAAKZ,EAAUI,EAAOI,MAC/B,QACE,OAAOR,IAmEXgB,aA/DmB,WAAuB,IAAtBhB,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAd,EAC5B,QAD0CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC3BN,MACb,ID1DmB,UC2DjB,OAAO,EACT,IDhE4B,mBCiE1B,OAAOG,EAAQ,EACjB,QACE,OAAOA,IAyDXiB,aApDmB,WAAwB,IAAvBjB,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOP,MACb,IDtEmB,UCuEjB,MAAO,GACT,ID3EwB,eC4EtB,SAAAqB,OAAAN,OAAAO,EAAA,EAAAP,CAAWR,EAAOgB,QAAlBR,OAAAO,EAAA,EAAAP,CAA6BZ,IAC/B,QACE,OAAOA,IA8CXqB,WAzCiB,WAAwB,IAAvBrB,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACzC,OAAQC,EAAOP,MACb,IDpF2B,kBCqFzB,OAAOO,EAAOgB,OAChB,IDvFwB,eCwFtB,OAAOpB,EAAMsB,OAAO,SAAAC,GAAC,OAAKnB,EAAOoB,QAAQC,SAASF,EAAE,MACtD,QACE,OAAOvB,IAmCX0B,cA9BoB,WAAwB,IAAvB1B,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5C,OAAQC,EAAOP,MACb,IDhG2B,kBCiGzB,MAAO,CAACO,EAAOgB,OAAOlB,QACxB,IDnGwB,eCoGtB,IAAMyB,EAAO3B,EAAMA,EAAME,OAAS,GAClC,SAAAgB,OAAAN,OAAAO,EAAA,EAAAP,CAAWZ,GAAX,CAAkB2B,EAAOvB,EAAOgB,OAAOlB,SACzC,QACE,OAAOF,IAuBX4B,KAnBW,WAA+B,IAA9B5B,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB,UAAWG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1C,OAAQC,EAAOP,MACb,ID3GoB,WC4GlB,OAAOO,EAAOwB,KAChB,QACE,OAAO5B,wEC5GP6B,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAJ,IACjBE,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAAiB,GAAAO,KAAAH,KAAMH,KAQRO,YAAc,WAIZ,IAHA,IAAMC,EAAS,IAAIC,OAAOC,OAAOC,OAC3BjC,EAAO,IAAI+B,OAAOC,OAAOE,UACzBC,EAAQ,QACLC,EAAI,EAAGA,EAAIb,EAAKD,MAAMxB,WAAWJ,SAAU0C,EAAG,KAAAC,EAAAjC,OAAAC,EAAA,EAAAD,CAC9BmB,EAAKD,MAAMxB,WAAWsC,GADQ,GAC9C9B,EAD8C+B,EAAA,GACxCC,EADwCD,EAAA,GAE/CE,EAAQ,CAACD,EAAOE,IAAKF,EAAOG,MAClC,GAAIlB,EAAKD,MAAMtB,KAAKM,GAClB,IAAK,IAAIoC,EAAI,EAAGA,EAAI,IAAKA,EAAG,CAC1B,IAAMC,EAAMpB,EAAKqB,OAAOtC,GAAMoC,GAAGG,QAAQC,MAAMC,OAC/C,GAAY,KAARJ,EAAJ,CACK,IAAIR,EAAMa,KAAKL,GAGlB,YADAM,MAAK,GAAAvC,OAAIiC,EAAJ,QAAAjC,OAAcJ,EAAd,6BAFmBiC,EAAMG,GAAKQ,SAASP,IAOlDb,EAAOqB,UAAUZ,GACjBvC,EAAKmD,UAAU5B,EAAKD,MAAMtB,KAAKM,IAEjC,IAAI8C,EAAY,IACVT,EAAMpB,EAAKqB,OAAOQ,UAAUP,QAAQC,MAAMC,OACpC,KAARJ,GAAcR,EAAMa,KAAKL,KAAMS,EAAYF,SAASP,IACxD,IAAM5C,EAAawB,EAAKD,MAAMzB,QAAQwD,iBACpCvB,EACA9B,EACAoD,GAEF,GAA0B,IAAtBrD,EAAWuD,OAGb,OAFAvB,OAAOC,OAAOuB,cAAcxD,QAC5BkD,MAAM,uCAGR1B,EAAKD,MAAMkC,eAAezD,IA3CTwB,EA8CnBkC,iBAAmB,SAAAC,GACjBnC,EAAKD,MAAMqC,WAAWD,EAAME,OAAOd,QA7CnCvB,EAAKqB,OAAS,GACdrB,EAAKD,MAAMxB,WAAWG,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAlBI,EAAkBH,EAAA,GAAAA,EAAA,GAChDoB,EAAKqB,OAAOtC,GAAQ,CAACuD,IAAMC,YAAaD,IAAMC,eAEhDvC,EAAKqB,OAAOQ,UAAYS,IAAMC,YANbvC,wEAkDV,IAAAwC,EAAAtC,KACDuC,EAAMvC,KAAKH,MAAMxB,WAAWmE,IAAI,SAAAC,GAAoB,IAAAC,EAAA/D,OAAAC,EAAA,EAAAD,CAAA8D,EAAA,GAAlB5D,EAAkB6D,EAAA,GAAZ7B,EAAY6B,EAAA,GAClDC,EAAqC,IAA1BL,EAAKzC,MAAMtB,KAAKM,GACzBkC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KACb,OACE4B,EAAAC,EAAAC,cAAA,MAAIC,IAAKlE,GACP+D,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAgBnE,GAC9B+D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACElF,KAAK,OACLoF,UAAU,eACVC,YAAalC,EACbmC,IAAKZ,EAAKnB,OAAOtC,GAAM,GACvB8D,SAAUA,KAGdC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACElF,KAAK,OACLoF,UAAU,eACVC,YAAajC,EACbkC,IAAKZ,EAAKnB,OAAOtC,GAAM,GACvB8D,SAAUA,KAGdC,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBACZJ,EAAAC,EAAAC,cAAA,SACElF,KAAK,WACLuF,QAASR,EACTS,SAAU,kBACRd,EAAKzC,MAAMwD,WAAWxE,EAAM,EAAIyD,EAAKzC,MAAMtB,KAAKM,WAO5D,OACE+D,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qBAAqBM,MAAO,CAAEC,SAAU,UACrDX,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,KAAGE,UAAU,mBAAb,yGACwGJ,EAAAC,EAAAC,cAAA,WADxG,oFAEmFF,EAAAC,EAAAC,cAAA,WAFnF,2FAG0FF,EAAAC,EAAAC,cAAA,WAH1F,uEAIsEF,EAAAC,EAAAC,cAAA,YAEtEF,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,gBAAd,aACAJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,IAAd,aAGJJ,EAAAC,EAAAC,cAAA,aAAQP,IAEVK,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,qCACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,SAAOU,QAAQ,YAAYR,UAAU,wBAArC,mBAGAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,SACElF,KAAK,OACLoF,UAAU,eACVS,GAAG,YACHR,YAAY,OACZC,IAAKlD,KAAKmB,OAAOQ,eAMzBiB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,0BACbJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,wBAAjB,QACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gCACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,mBACVpF,KAAK,QACL8F,KAAK,qBACLD,GAAG,UACHpC,MAAM,UACN8B,QAA6B,YAApBnD,KAAKH,MAAMF,KACpByD,SAAUpD,KAAKgC,mBAEjBY,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBQ,QAAQ,WAA5C,YAIFZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gCACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,mBACVpF,KAAK,QACL8F,KAAK,qBACLD,GAAG,SACHpC,MAAM,SACN8B,QAA6B,WAApBnD,KAAKH,MAAMF,KACpByD,SAAUpD,KAAKgC,mBAEjBY,EAAAC,EAAAC,cAAA,SAAOE,UAAU,mBAAmBQ,QAAQ,UAA5C,eAQVZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,UACElF,KAAK,SACLoF,UAAU,kBACVM,MAAO,CAAEK,MAAO,QAChBC,QAAS5D,KAAKI,aAJhB,oBArKQgC,IAAMyB,WAqMbC,cAhBS,SAAAC,GAAA,MAA0C,CAChE1F,WADsB0F,EAAG1F,WAEzBE,KAFsBwF,EAAexF,KAGrCH,QAHsB2F,EAAqB3F,QAI3CuB,KAJsBoE,EAA8BpE,OAO3B,SAAAqE,GAAQ,MAAK,CACtCjC,eAAgB,SAAAzD,GACd0F,EFxLyB,SAAA1F,GAAU,MAAK,CAC1CV,KAf4B,iBAgB5BU,cEsLW2F,CAAc3F,IACvB0F,EAAStG,EAAmB,iBAE9B2F,WAAY,SAACxE,EAAMN,GAAP,OAAgByF,EFhLJ,SAACnF,EAAMqF,GAAP,MAAgB,CACxCtG,KAxByB,cAyBzBW,KAAKI,OAAAwF,EAAA,EAAAxF,CAAA,GAAIE,EAAOqF,IE8KqBb,CAAWxE,EAAMN,KACtD2D,WAAY,SAAAvC,GAAI,OAAIqE,EF7JI,SAAArE,GAAI,MAAK,CACjC/B,KAxCsB,WAyCtB+B,QE2J6BuC,CAAWvC,OAG3BmE,CAGblE,mBChNFU,OAAO8D,MAAQA,EACfC,EAAQ,IACRA,EAAQ,IACRA,EAAQ,IAEOD,QCFTE,6MAyBJC,UAAY,WACVzE,EAAKO,OAAS,CACZ,CAACmE,IAAU,GACX,CAACA,IAAU,GACX,CAACA,IAAU,IAGb1E,EAAKD,MAAMT,WAAWZ,QAAQ,SAAAiG,GAC5BA,EAAMC,MAAM,GAAGlG,QAAQ,SAACK,EAAM8B,GACxBb,EAAKO,OAAOM,GAAG,GAAK9B,IACtBiB,EAAKO,OAAOM,GAAG,GAAK9B,GAElBiB,EAAKO,OAAOM,GAAG,GAAK9B,IACtBiB,EAAKO,OAAOM,GAAG,GAAK9B,UAM5B8F,aAAe,WACb,KAAI7E,EAAKD,MAAMT,WAAWnB,OAAS,GAAnC,MACoBC,IAAhB4B,EAAKO,QAAsBP,EAAKyE,YACpC,IAAMpF,EAASW,EAAKD,MAAMT,WAAWoD,IAAI,SAAAiC,GACvC,IAAMG,EAAeH,EAAMC,MAAM,GAAGlC,IAAI,SAAC3D,EAAM8B,GAAM,IAAAkE,EAAAlG,OAAAC,EAAA,EAAAD,CAChCmB,EAAKO,OAAOM,GADoB,GAC5CmE,EAD4CD,EAAA,GAEnD,OAAQhG,EAAOiG,IAFoCD,EAAA,GAEtBC,KAE/B,OAAOnG,OAAAoG,EAAA,EAAApG,CAAIyF,EAAMY,QAAjBrG,OAAAO,EAAA,EAAAP,CAA4BiG,MAG9B,GAAIzF,EAAOlB,OAAS,EAAG,CACrB,IAAMgH,EAAW,IAAIb,EAAMc,eAAe/F,GACpCgG,EAAW,IAAIf,EAAMgB,kBAAkB,CAAEC,MAAO,QAAUC,WAAW,IAC3ExF,EAAKyF,KAAO,IAAInB,EAAMoB,KAAKP,EAAUE,OAChC,CACL,IAAMF,EAAW,IAAIb,EAAMqB,SAC3BtG,EAAOX,QAAQ,SAAAkH,GACbT,EAASU,SAASC,KAAKF,KAEH,IAAlBvG,EAAOlB,QAETgH,EAASU,SAASC,KAAKzG,EAAO,IAEhC,IAAMgG,EAAW,IAAIf,EAAMyB,kBAAkB,CAAER,MAAO,UACtDvF,EAAKyF,KAAO,IAAInB,EAAM0B,KAAKb,EAAUE,GAEvCrF,EAAKiG,MAAMC,IAAIlG,EAAKyF,UAmBtBU,MAAQ,WACDnG,EAAKoG,UACRpG,EAAKoG,QAAU5F,OAAO6F,sBAAsBrG,EAAKsG,aAIrDC,KAAO,WACL/F,OAAOgG,qBAAqBxG,EAAKoG,YAGnCE,QAAU,WACRtG,EAAKyG,SAASC,SACd1G,EAAK2G,SAASC,OAAO5G,EAAKiG,MAAOjG,EAAK6G,QACtC7G,EAAKoG,QAAU5F,OAAO6F,sBAAsBrG,EAAKsG,6FArGjD,IAAMzC,EAAQ3D,KAAK4G,MAAMC,YACnBC,EAAS9G,KAAK4G,MAAMG,aAE1B/G,KAAK+F,MAAQ,IAAI3B,EAAM4C,MAEvBhH,KAAK2G,OAAS,IAAIvC,EAAM6C,kBACtB,GACAtD,EAAQmD,EACR,GACA,IAEF9G,KAAKuG,SAAW,IAAInC,EAAM8C,cAAclH,KAAK2G,OAAQ3G,KAAK4G,OAC1D5G,KAAK2G,OAAOQ,SAASC,IAAI,IAAK,IAAK,KACnCpH,KAAKuG,SAASC,SAEdxG,KAAKyG,SAAW,IAAIrC,EAAMiD,cAAc,CAAEC,WAAW,IACrDtH,KAAKyG,SAASc,cAAc,WAC5BvH,KAAKyG,SAASe,QAAQ7D,EAAOmD,GAC7B9G,KAAK4G,MAAMa,YAAYzH,KAAKyG,SAASiB,YACrC1H,KAAK+F,MAAMC,IAAI,IAAI5B,EAAMuD,WAAW,MACpC3H,KAAKiG,mDAoDY2B,GACb5H,KAAKH,MAAMT,aAAewI,EAAUxI,aAClCY,KAAKuF,OACPvF,KAAK+F,MAAM8B,OAAO7H,KAAKuF,MACvBvF,KAAKuF,KAAKN,SAAS6C,UACnB9H,KAAKuF,KAAKJ,SAAS2C,WAErB9H,KAAK2E,+DAKP3E,KAAKqG,OACLrG,KAAK4G,MAAMmB,YAAY/H,KAAKyG,SAASiB,6CAmB9B,IAAApF,EAAAtC,KACP,OACE4C,EAAAC,EAAAC,cAAA,OAAKQ,MAAO,CAAE0E,OAAQ,SACpBpF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,OACEQ,MAAO,CAAEK,MAAO,QAASmD,OAAQ,QAASkB,OAAQ,QAClD9E,IAAK,SAAC0D,GAAYtE,EAAKsE,MAAQA,aAhHhBxE,IAAMyB,WAyHhBC,cAFS,SAAArF,GAAA,MAAiC,CAAEH,WAAnCG,EAAGH,WAA4Cc,WAA/CX,EAAeW,aAExB0E,CAAyBQ,GCnHlC2D,EAAU,EACVC,EAAS,EAgBf,SAASC,EAAYzC,GAEnB,IADA,IAAI0C,EAAM,GACDzH,EAAI,EAAGA,EAAI+E,EAAM2C,QAAS1H,EACjCyH,EAAIxC,KAAKF,EAAM4C,IAAI3H,IAErB,OAAOyH,EAGT,SAASG,EAAepJ,GAEtB,IADA,IAAIiJ,EAAM,GACDzH,EAAI,EAAGA,EAAIxB,EAAO0C,SAAUlB,EACnCyH,EAAIxC,KAAKuC,EAAYhJ,EAAOmJ,IAAI3H,KAElC,OAAOyH,MAGHI,cACJ,SAAAA,EAAY3I,GAAO,IAAAC,EAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAwI,IACjB1I,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAA6J,GAAArI,KAAAH,KAAMH,KAiCR4I,OAAS,SAAAC,GACP,IAAMC,EAASD,EAAM,EACrB5I,EAAK8I,OAAOH,OAAOE,GACnB,IAAME,EAAc/I,EAAK8I,OAAOE,uBAC1BC,EArEV,SAA0BC,EAAaH,GAErC,IADA,IAAIE,EAAgB,GACXpI,EAAI,EAAGM,EAAI,EAAGN,EAAIqI,EAAYnH,QAAUZ,EAAI4H,EAAYhH,QAC3DZ,GAAK4H,EAAYhH,QAAUmH,EAAYV,IAAI3H,GAAKkI,EAAYP,IAAIrH,IAClE8H,EAAcnD,KAAKoD,EAAYV,IAAI3H,MACjCA,MAEAA,IACAM,GAGN,OAAO8H,EA0DiBE,CAAiBnJ,EAAKkJ,YAAaH,GACnD7J,EAAe+J,EAAcvG,IAAI,SAAAkG,GACrC,IAAMhD,EAAQ5F,EAAKD,MAAMvB,WAAWgK,IAAII,GACxC,OAAQA,EAAK5I,EAAKD,MAAMd,aAAe,GAAvCE,OAAAN,OAAAO,EAAA,EAAAP,CAA6CwJ,EAAYzC,OAK3D,GAHA5F,EAAKD,MAAMqJ,YAAYlK,EAAc+J,GACrCjJ,EAAKkJ,YAAcH,EACnB/I,EAAKD,MAAMsJ,kBACPrJ,EAAKkJ,YAAYnH,OAAS,EAC5B/B,EAAKsJ,sBACA,CACL,IAAMC,EAAWd,EAAezI,EAAK8I,OAAOS,YAC5CvJ,EAAKwJ,SAAS,CACZC,KAAMF,MAnDOvJ,EAwDnBsJ,gBAAkB,WAChB9I,OAAOC,OAAOuB,cAAchC,EAAKD,MAAMvB,YACvCwB,EAAKD,MAAM2J,cAxDX,IAAMC,EAAgB,IAAInJ,OAAOC,OAAOE,UACxCX,EAAKzB,WAAa,GAClByB,EAAKD,MAAMxB,WAAWG,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAlBI,EAAkBH,EAAA,GAAZmC,EAAYnC,EAAA,GAC5CoB,EAAKD,MAAMtB,KAAKM,KAClB4K,EAAc/H,UAAUb,EAAO4I,cAAgB,EAAI,GACnD3J,EAAKzB,WAAWuH,KAAK/G,MAGzBiB,EAAK8I,OAAS,IAAItI,OAAOC,OAAOmJ,gBAC9B5J,EAAKD,MAAMvB,WACXmL,EACoB,WAApB3J,EAAKD,MAAMF,KAAoBuI,EAASD,GAE1CnI,EAAKkJ,YAAclJ,EAAK8I,OAAOE,uBAE/B,IADA,IAAI1J,EAAa,GACRuB,EAAI,EAAGA,EAAIb,EAAKkJ,YAAYnH,SAAUlB,EAAG,CAChD,IAAM+H,EAAM5I,EAAKkJ,YAAYV,IAAI3H,GAC3B+E,EAAQ5F,EAAKD,MAAMvB,WAAWgK,IAAII,GAClCiB,EAAC,CAAIjB,GAAJzJ,OAAAN,OAAAO,EAAA,EAAAP,CAAYwJ,EAAYzC,KAC/BtG,EAAWwG,KAAK+D,GArBD,OAuBjB7J,EAAKD,MAAM+J,cAAcxK,GACrBU,EAAKkJ,YAAYnH,OAAS,GAC5B/B,EAAK/B,MAAQ,CAAEwL,KAAM,IACrBzJ,EAAKsJ,mBAELtJ,EAAK/B,MAAQ,CACXwL,KAAMhB,EAAezI,EAAK8I,OAAOS,aA7BpBvJ,wEA6DV,IAAAwC,EAAAtC,KACD6J,EAAM,CAACjH,EAAAC,EAAAC,cAAA,MAAIC,IAAI,cAAR,WACb/C,KAAK3B,WAAWG,QAAQ,SAAAK,GACtBgL,EAAIjE,KAAKhD,EAAAC,EAAAC,cAAA,MAAIC,IAAKlE,GAAOA,MAE3BgL,EAAIjE,KAAKhD,EAAAC,EAAAC,cAAA,MAAIC,IAAI,kBAEjB,IAAMR,EAAMvC,KAAKjC,MAAMwL,KAAK/G,IAAI,SAACkD,EAAOgD,GACtC,IAAMoB,EAAM,CAAClH,EAAAC,EAAAC,cAAA,MAAIC,IAAI,cAAc2F,EAAM,IAezC,OAdAhD,EAAMlH,QAAQ,SAACc,EAAGqB,GAChBmJ,EAAIlE,KAAKhD,EAAAC,EAAAC,cAAA,MAAIC,IAAKpC,GAAIrB,MAExBwK,EAAIlE,KACFhD,EAAAC,EAAAC,cAAA,MAAIC,IAAI,gBACNH,EAAAC,EAAAC,cAAA,UACElF,KAAK,SACLoF,UAAU,iCACVY,QAAS,kBAAMtB,EAAKmG,OAAOC,KAH7B,YASG9F,EAAAC,EAAAC,cAAA,MAAIC,IAAK2F,GAAMoB,KAExB,OACElH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACbJ,EAAAC,EAAAC,cAAA,cAAM9C,KAAKH,MAAMd,aAAe,EAAhC,+DACA6D,EAAAC,EAAAC,cAAA,SAAOE,UAAU,iCACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAK+G,IAEPjH,EAAAC,EAAAC,cAAA,aAAQP,IAEVK,EAAAC,EAAAC,cAAA,UAAQlF,KAAK,SAASoF,UAAU,kBAAkBY,QAAS5D,KAAKoJ,iBAAhE,QAI6B,IAA3BpJ,KAAK3B,WAAWJ,QAAgB2E,EAAAC,EAAAC,cAACiH,EAAD,eArGlB3H,IAAMyB,WA2IjBC,cA7BS,SAAArB,GAAA,MAMjB,CACLnE,WAPsBmE,EACtBnE,WAOAC,KARsBkE,EAEtBlE,KAOAF,WATsBoE,EAGtBpE,WAOAU,aAVsB0D,EAItB1D,aAOAY,KAXsB8C,EAKtB9C,OASyB,SAAAqE,GAAQ,MAAK,CACtCwF,WAAY,WACVxF,EAAStG,EAAmB,YAE9ByL,gBAAiB,WACfnF,EL7IkC,CACpCpG,KA5B8B,sBK0K9BgM,cAAe,SAAAxK,GACb4E,ELtIoC,CACtCpG,KApC6B,kBAqC7BuB,OKoIyBC,KAEzB8J,YAAa,SAAC/J,EAAQI,GACpByE,EL/IuB,SAAC7E,EAAQI,GAAT,MAAsB,CAC/C3B,KA/B0B,eAgC1BuB,SACAI,WK4IW2J,CAAY/J,EAAQI,OAIlBuE,CAGb0E,WCrLIwB,cACJ,SAAAA,EAAYnK,GAAO,IAAAC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAgK,IACjBlK,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAAqL,GAAA7J,KAAAH,KAAMH,KAORoK,cAAgB,WACdnK,EAAKwJ,SAAS,CACZY,UAAW,QAVIpK,EAcnBqK,YAAc,SAAC9I,EAAD5C,GAAsB,IAAZ2L,EAAY3L,EAAZ2L,MACtBtK,EAAKwJ,SAAS,CACZY,UAAWpK,EAAKuK,KAAKD,MAdvBtK,EAAK/B,MAAQ,CACXmM,UAAW,MAEbpK,EAAKuK,KAAOxK,EAAMJ,cAAc+C,IAAI,SAAC8H,EAAK3J,GAAN,MAAa,CAAErB,EAAGqB,EAAG4J,EAAGD,KAL3CxK,wEAqBjB,OACE8C,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAQC,aAAczK,KAAKiK,cAAenD,OAAQ,IAAKnD,MAAO,KAC5Df,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CACEE,WAAY1K,KAAKH,MAAMJ,cAAc+C,IAAI,SAAC8H,EAAK3J,GAAN,OAAYA,IACrDgK,WAAY,SAAAtJ,GAAK,OAAIA,EAAMuJ,cAE7BhI,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,MACA5H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CACEK,KAAK,eACLC,eAAe,EACfC,SAAU,IACVC,SAAU,OAEZpI,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CACEK,KAAK,mBACLC,eAAe,EACfC,UAAW,IACXC,SAAU,IACV1H,MAAO,CACL2H,UAAW,cACXC,WAAY,SAGhBtI,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAmBnF,MAAM,mBAAmB8F,WAAYnL,KAAKmK,YAAaE,KAAMrK,KAAKqK,OAEnFrK,KAAKjC,MAAMmM,WACXtH,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAMnJ,MAAOrB,KAAKjC,MAAMmM,WACtBtH,EAAAC,EAAAC,cAAA,KAAGQ,MAAO,CAAE+B,MAAO,oBAAnB,IAA0CrF,KAAKjC,MAAMmM,UAAU5K,EAA/D,KAAoEU,KAAKjC,MAAMmM,UAAUK,EAAzF,uBAjDYnI,IAAMyB,WA4DfC,cAFS,SAAApF,GAAA,MAAwB,CAAEe,cAA1Bf,EAAGe,gBAEZqE,CAAyBkG,GCZxC,IAcelG,cAdS,SAAApB,GAAA,MAAqD,CAC3EtD,WADsBsD,EAAGtD,WAEzBf,WAFsBqE,EAAerE,WAGrCE,KAHsBmE,EAA2BnE,KAIjDQ,aAJsB2D,EAAiC3D,eAO9B,SAAAiF,GAAQ,MAAK,CACtCoH,QAAS,WACPpH,EAAStG,EAAmB,YAC5BsG,EPX0B,CAC5BpG,KA5CqB,eO0DRkG,CA7Df,SAAArF,GAAyE,IAAvDW,EAAuDX,EAAvDW,WAAYf,EAA2CI,EAA3CJ,WAAYE,EAA+BE,EAA/BF,KAAMQ,EAAyBN,EAAzBM,aAAcqM,EAAW3M,EAAX2M,QACxDvB,EAAM,GACVxL,EAAWG,QAAQ,SAAAE,GAAoB,IAAA+D,EAAA9D,OAAAC,EAAA,EAAAD,CAAAD,EAAA,GAAlBG,EAAkB4D,EAAA,GACrC,GADqCA,EAAA,GACjClE,EAAKM,GAAO,CACd,IAAMwM,EAAKzI,EAAAC,EAAAC,cAAA,MAAIC,IAAKlE,GAAOA,GAC3BgL,EAAIjE,KAAKyF,MAGb,IAAM9I,EAAMnD,EAAWoD,IAAI,SAACkD,EAAOgD,GAAR,OACzB9F,EAAAC,EAAAC,cAAA,MAAIC,IAAK2F,GACNhD,EAAMhB,MAAM,GAAGlC,IAAI,SAAClD,EAAGoJ,GAAJ,OAClB9F,EAAAC,EAAAC,cAAA,MAAIC,IAAK2F,GAAMpJ,QAIrB,OACEsD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,8BACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,kDACwC/D,EADxC,KAGA6D,EAAAC,EAAAC,cAAA,UAE0B,IAAtB1D,EAAWnB,OACT,yBADF,GAAAgB,OAEKG,EAAWnB,OAFhB,gCAKJ2E,EAAAC,EAAAC,cAAA,SAAOE,UAAU,iCACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAK+G,IAEPjH,EAAAC,EAAAC,cAAA,aACGP,IAGLK,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iCACbJ,EAAAC,EAAAC,cAACwI,EAAD,OAEF1I,EAAAC,EAAAC,cAAA,UAAQlF,KAAK,SAASoF,UAAU,kBAAkBY,QAASwH,GAA3D,yBCzCFG,cACJ,SAAAA,EAAY1L,GAAO,IAAAC,EAAA,OAAAnB,OAAAoB,EAAA,EAAApB,CAAAqB,KAAAuL,IACjBzL,EAAAnB,OAAAsB,EAAA,EAAAtB,CAAAqB,KAAArB,OAAAuB,EAAA,EAAAvB,CAAA4M,GAAApL,KAAAH,KAAMH,KACDxB,WAAa,GAClByB,EAAKD,MAAMxB,WAAWG,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAlBI,EAAkBH,EAAA,GAAAA,EAAA,GAC5CoB,EAAKD,MAAMtB,KAAKM,IAClBiB,EAAKzB,WAAWuH,KAAK/G,KALRiB,wEAWjB,IAAI+J,EAAM,CAACjH,EAAAC,EAAAC,cAAA,MAAIC,IAAI,YAAR,SACX/C,KAAK3B,WAAWG,QAAQ,SAAAK,GACtBgL,EAAIjE,KAAKhD,EAAAC,EAAAC,cAAA,MAAIC,IAAKlE,GAAOA,MAE3B,IAAM2M,EAAYxL,KAAKH,MAAMb,aAAawD,IAAI,SAACkD,EAAOgD,GAAR,OAC5C9F,EAAAC,EAAAC,cAAA,MAAIC,IAAK2F,GACNhD,EAAMhB,MAAM,GAAGlC,IAAI,SAAClD,EAAGoJ,GAAJ,OAClB9F,EAAAC,EAAAC,cAAA,MAAIC,IAAK2F,GAAMpJ,QAIfmM,EAAUzL,KAAKH,MAAMT,WAAWoD,IAAI,SAACkD,EAAOgD,GAAR,OACxC9F,EAAAC,EAAAC,cAAA,MAAIC,IAAK2F,GACNhD,EAAMhB,MAAM,GAAGlC,IAAI,SAAClD,EAAGoJ,GAAJ,OAClB9F,EAAAC,EAAAC,cAAA,MAAIC,IAAK2F,GAAMpJ,QAIrB,OACEsD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,6CAAqC9C,KAAKH,MAAMb,aAAaf,QAC7D2E,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAK+G,IAEPjH,EAAAC,EAAAC,cAAA,aAAQ0I,KAGZ5I,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAA,mDAA2C9C,KAAKH,MAAMT,WAAWnB,QACjE2E,EAAAC,EAAAC,cAAA,SAAOE,UAAU,SACfJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UAAK+G,EAAInF,MAAM,KAEjB9B,EAAAC,EAAAC,cAAA,aAAQ2I,aA/CArJ,IAAMyB,WAqEXC,cAdc,SAAArB,GAAA,MAMtB,CACLzD,aAP2ByD,EAC3BzD,aAOAI,WAR2BqD,EAE3BrD,WAOAf,WAT2BoE,EAG3BpE,WAOAE,KAV2BkE,EAI3BlE,KAOAQ,aAX2B0D,EAK3B1D,eASa+E,CAA8ByH,GChD7C,IAIezH,cAJS,SAAApF,GAAA,MAA0B,CAChDZ,gBADsBY,EAAGZ,kBAIZgG,CArBf,SAAArF,GAAkC,IAAnBX,EAAmBW,EAAnBX,gBACb,MAAwB,YAApBA,EACK8E,EAAAC,EAAAC,cAAC4I,EAAD,MACsB,gBAApB5N,EAEP8E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6I,EAAD,MACA/I,EAAAC,EAAAC,cAAC8I,EAAD,OAGyB,WAApB9N,EACF8E,EAAAC,EAAAC,cAAC+I,EAAD,MAEAjJ,EAAAC,EAAAC,cAAA,cCbXxC,OAAOC,OAAS,CACduL,qBAAsB,WACpB,IAAM1N,EAAU,IAAIkC,OAAOC,OAAOwL,QAAQ,WACpC1N,EAAa,CACjB,CAAC,cAAe,CAAE0C,IAAK,IAAMC,KAAM,IAAOyI,eAAe,IACzD,CAAC,OAAQ,CAAE1I,IAAK,KAAMC,KAAM,KAAMyI,eAAe,IACjD,CAAC,aAAc,CAAE1I,IAAK,GAAIC,KAAM,IAAKyI,eAAe,IACpD,CAAC,UAAW,CAAE1I,IAAK,IAAOC,KAAM,KAAQyI,eAAe,KAEnDlL,EAAO,GACbF,EAAWG,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAF,EAAA,GAAlBI,EAAkBH,EAAA,GAAAA,EAAA,GACrCH,EAAKM,GAAQ,IAGf,IAAMmN,EAAQC,YACZC,EACA,CAAE9N,UAASC,aAAYE,SAGzBmI,iBACE9D,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAUH,MAAOA,GACfpJ,EAAAC,EAAAC,cAACsJ,EAAD,OAEFC,SAASC,eAAe,WAK9B,IAAMC,EAASF,SAASvJ,cAAc,UACtCyJ,EAAOC,IAAM,SACbD,EAAOE,OAAQ,EACfJ,SAASK,KAAKjF,YAAY8E","file":"static/js/main.6a78cf81.chunk.js","sourcesContent":["export const SET_ACTIVE_COMPONENT = \"SET_ACTIVE_COMPONENT\";\r\nexport const SET_CANDIDATES = \"SET_CANDIDATES\";\r\nexport const SET_DATASET = \"SET_DATASET\";\r\nexport const TOGGLE_MASK = \"TOGGLE_MASK\";\r\nexport const INCREMENT_QCOUNT = \"INCREMENT_QCOUNT\";\r\nexport const PRUNE_POINTS = \"PRUNE_POINTS\";\r\nexport const SET_LEFT_POINTS = \"SET_LEFT_POINTS\";\r\nexport const SET_MODE = \"SET_MODE\";\r\nexport const RESTART = \"RESTART\";\r\n\r\nexport const setActiveComponent = component => ({\r\n  type: SET_ACTIVE_COMPONENT,\r\n  component\r\n});\r\n\r\nexport const setCandidates = candidates => ({\r\n  type: SET_CANDIDATES,\r\n  candidates\r\n});\r\n\r\nexport const setDataset = (dataset, attributes) => ({\r\n  type: SET_DATASET,\r\n  dataset,\r\n  attributes\r\n});\r\n\r\nexport const toggleMask = (attr, val) => ({\r\n  type: TOGGLE_MASK,\r\n  mask: { [attr]: val }\r\n});\r\n\r\nexport const incrementQCount = () => ({\r\n  type: INCREMENT_QCOUNT\r\n});\r\n\r\nexport const prunePoints = (points, indices) => ({\r\n  type: PRUNE_POINTS,\r\n  points,\r\n  indices\r\n});\r\n\r\nexport const setLeftPoints = points => ({\r\n  type: SET_LEFT_POINTS,\r\n  points\r\n});\r\n\r\nexport const changeMode = mode => ({\r\n  type: SET_MODE,\r\n  mode\r\n});\r\n\r\nexport const restart = () => ({\r\n  type: RESTART\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport {\r\n  SET_ACTIVE_COMPONENT,\r\n  SET_DATASET,\r\n  SET_CANDIDATES,\r\n  TOGGLE_MASK,\r\n  INCREMENT_QCOUNT,\r\n  SET_LEFT_POINTS,\r\n  PRUNE_POINTS,\r\n  SET_MODE,\r\n  RESTART\r\n} from \"../actions\";\r\n\r\nconst activeComponent = (state = \"Welcome\", action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE_COMPONENT:\r\n      return action.component;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst dataset = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.dataset;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst attributes = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      return action.attributes;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst candidates = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_CANDIDATES:\r\n      return action.candidates;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst mask = (state = null, action) => {\r\n  switch (action.type) {\r\n    case SET_DATASET:\r\n      const mask = {};\r\n      action.attributes.forEach(([attr, config]) => {\r\n        mask[attr] = 1;\r\n      });\r\n      return mask;\r\n    case TOGGLE_MASK:\r\n      return { ...state, ...action.mask };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst numQuestions = (state = 0, action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return 0;\r\n    case INCREMENT_QCOUNT:\r\n      return state + 1;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, step no., attributes]\r\nconst prunedPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case RESTART:\r\n      return [];\r\n    case PRUNE_POINTS:\r\n      return [...action.points, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// array of [idx, attributes...]\r\nconst leftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return action.points;\r\n    case PRUNE_POINTS:\r\n      return state.filter(x => !action.indices.includes(x[0]));\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// history of the number of left points\r\nconst numLeftPoints = (state = [], action) => {\r\n  switch (action.type) {\r\n    case SET_LEFT_POINTS:\r\n      return [action.points.length];\r\n    case PRUNE_POINTS:\r\n      const prev = state[state.length - 1];\r\n      return [...state, prev - action.points.length];\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst mode = (state = \"simplex\", action) => {\r\n  switch (action.type) {\r\n    case SET_MODE:\r\n      return action.mode;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  activeComponent,\r\n  dataset,\r\n  attributes,\r\n  candidates,\r\n  mask,\r\n  numQuestions,\r\n  prunedPoints,\r\n  leftPoints,\r\n  numLeftPoints,\r\n  mode\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  setActiveComponent,\r\n  setCandidates,\r\n  toggleMask,\r\n  changeMode\r\n} from \"../actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Welcome extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputs = {};\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      this.inputs[attr] = [React.createRef(), React.createRef()];\r\n    });\r\n    this.inputs.maxPoints = React.createRef();\r\n  }\r\n\r\n  handleStart = () => {\r\n    const ranges = new window.Module.Ranges();\r\n    const mask = new window.Module.VectorInt();\r\n    const regex = /^\\d+$/;\r\n    for (let i = 0; i < this.props.attributes.length; ++i) {\r\n      const [attr, config] = this.props.attributes[i];\r\n      const range = [config.low, config.high];\r\n      if (this.props.mask[attr]) {\r\n        for (let j = 0; j < 2; ++j) {\r\n          const str = this.inputs[attr][j].current.value.trim();\r\n          if (str === \"\") continue;\r\n          else if (regex.test(str)) range[j] = parseInt(str);\r\n          else {\r\n            alert(`${str} in ${attr} range is not an integer`);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n      ranges.push_back(range);\r\n      mask.push_back(this.props.mask[attr]);\r\n    }\r\n    let maxPoints = 1000;\r\n    const str = this.inputs.maxPoints.current.value.trim();\r\n    if (str !== \"\" && regex.test(str)) maxPoints = parseInt(str);\r\n    const candidates = this.props.dataset.selectCandidates(\r\n      ranges,\r\n      mask,\r\n      maxPoints\r\n    );\r\n    if (candidates.size() === 0) {\r\n      window.Module.releasePoints(candidates);\r\n      alert(\"No matching cars, try larger ranges\");\r\n      return;\r\n    }\r\n    this.props.startAlgorithm(candidates);\r\n  };\r\n\r\n  handleModeChange = event => {\r\n    this.props.changeMode(event.target.value);\r\n  };\r\n\r\n  render() {\r\n    const trs = this.props.attributes.map(([attr, config]) => {\r\n      const disabled = this.props.mask[attr] === 0;\r\n      const { low, high } = config;\r\n      return (\r\n        <tr key={attr}>\r\n          <td className=\"align-middle\">{attr}</td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={low}\r\n              ref={this.inputs[attr][0]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder={high}\r\n              ref={this.inputs[attr][1]}\r\n              disabled={disabled}\r\n            />\r\n          </td>\r\n          <td className=\"align-middle\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={disabled}\r\n              onChange={() =>\r\n                this.props.toggleMask(attr, 1 - this.props.mask[attr])\r\n              }\r\n            />\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n    return (\r\n      <div className=\"text-center m-auto\" style={{ maxWidth: \"50rem\" }}>\r\n        <h1>Find Your Favorite!</h1>\r\n        <p className=\"lead text-muted\">\r\n          This is a demostration of an interactive system for finding your favorite car in a used car database. <br />\r\n          Enter your acceptable range for each attribute (leave blank to use the default). <br />\r\n          You will be presented two cars each time and you need to choose the one you favor more. <br />\r\n          Click the \"Start\" button to find your favorite car in the database! <br />\r\n        </p>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th className=\"align-middle\">Attribute</th>\r\n              <th>Lower bound</th>\r\n              <th>Upper bound</th>\r\n              <th className=\"\">Discard</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{trs}</tbody>\r\n        </table>\r\n        <form>\r\n          <div className=\"form-group row align-items-center\">\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label htmlFor=\"maxPoints\" className=\"col-4 col-form-label\">\r\n                  Max No. of Cars\r\n                </label>\r\n                <div className=\"col\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"maxPoints\"\r\n                    placeholder=\"1000\"\r\n                    ref={this.inputs.maxPoints}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-6\">\r\n              <div className=\"row align-items-center\">\r\n                <label className=\"col-4 col-form-label\">Mode</label>\r\n                <div className=\"col text-left\">\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"simplex\"\r\n                      value=\"simplex\"\r\n                      checked={this.props.mode === \"simplex\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"simplex\">\r\n                      Simplex\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"form-check form-check-inline\">\r\n                    <input\r\n                      className=\"form-check-input\"\r\n                      type=\"radio\"\r\n                      name=\"inlineRadioOptions\"\r\n                      id=\"random\"\r\n                      value=\"random\"\r\n                      checked={this.props.mode === \"random\"}\r\n                      onChange={this.handleModeChange}\r\n                    />\r\n                    <label className=\"form-check-label\" htmlFor=\"random\">\r\n                      Random\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <div className=\"col\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                style={{ width: \"8rem\" }}\r\n                onClick={this.handleStart}\r\n              >\r\n                Start\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ attributes, mask, dataset, mode }) => ({\r\n  attributes,\r\n  mask,\r\n  dataset,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  startAlgorithm: candidates => {\r\n    dispatch(setCandidates(candidates));\r\n    dispatch(setActiveComponent(\"Interaction\"));\r\n  },\r\n  toggleMask: (attr, mask) => dispatch(toggleMask(attr, mask)),\r\n  changeMode: mode => dispatch(changeMode(mode))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Welcome);\r\n","import * as THREE from 'three';\r\nwindow.THREE = THREE;\r\nrequire('three/examples/js/controls/OrbitControls');\r\nrequire('three/examples/js/QuickHull');\r\nrequire('three/examples/js/geometries/ConvexGeometry');\r\n\r\nexport default THREE;","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport THREE from './three';\r\n\r\nclass ConvexHull extends React.Component {\r\n  componentDidMount() {\r\n    const width = this.mount.clientWidth\r\n    const height = this.mount.clientHeight\r\n\r\n    this.scene = new THREE.Scene()\r\n\r\n    this.camera = new THREE.PerspectiveCamera(\r\n      75,\r\n      width / height,\r\n      0.1,\r\n      10\r\n    )\r\n    this.controls = new THREE.OrbitControls(this.camera, this.mount);\r\n    this.camera.position.set(1.5, 1.5, 1.5);\r\n    this.controls.update();\r\n\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    this.renderer.setClearColor('#cccccc');\r\n    this.renderer.setSize(width, height);\r\n    this.mount.appendChild(this.renderer.domElement);\r\n    this.scene.add(new THREE.AxesHelper(1.5));\r\n    this.start();\r\n  }\r\n\r\n  getRanges = () => {\r\n    this.ranges = [\r\n      [Infinity, 0],\r\n      [Infinity, 0],\r\n      [Infinity, 0]\r\n    ];\r\n\r\n    this.props.leftPoints.forEach(tuple => {\r\n      tuple.slice(1).forEach((attr, i) => {\r\n        if (this.ranges[i][0] > attr) {\r\n          this.ranges[i][0] = attr;\r\n        }\r\n        if (this.ranges[i][1] < attr) {\r\n          this.ranges[i][1] = attr;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  drawGeometry = () => {\r\n    if (this.props.leftPoints.length < 2) return;\r\n    if (this.ranges === undefined) this.getRanges();\r\n    const points = this.props.leftPoints.map(tuple => {\r\n      const attrs_scaled = tuple.slice(1).map((attr, i) => {\r\n        const [min, max] = this.ranges[i];\r\n        return (attr - min) / (max - min);\r\n      });\r\n      return new THREE.Vector3(...attrs_scaled);\r\n    });\r\n\r\n    if (points.length > 3) {\r\n      const geometry = new THREE.ConvexGeometry(points);\r\n      const material = new THREE.MeshBasicMaterial({ color: 0x336699, wireframe: true });\r\n      this.mesh = new THREE.Mesh(geometry, material);\r\n    } else {\r\n      const geometry = new THREE.Geometry();\r\n      points.forEach(point => {\r\n        geometry.vertices.push(point);\r\n      });\r\n      if (points.length === 3) {\r\n        // line geometry is not closed. Add the first point to close the line.\r\n        geometry.vertices.push(points[0]);\r\n      }\r\n      const material = new THREE.LineBasicMaterial({ color: 0x336699 });\r\n      this.mesh = new THREE.Line(geometry, material);\r\n    }\r\n    this.scene.add(this.mesh);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.leftPoints !== prevProps.leftPoints) {\r\n      if (this.mesh) {\r\n        this.scene.remove(this.mesh);\r\n        this.mesh.geometry.dispose();\r\n        this.mesh.material.dispose();\r\n      }\r\n      this.drawGeometry();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.stop();\r\n    this.mount.removeChild(this.renderer.domElement);\r\n  }\r\n\r\n  start = () => {\r\n    if (!this.frameId) {\r\n      this.frameId = window.requestAnimationFrame(this.animate);\r\n    }\r\n  }\r\n\r\n  stop = () => {\r\n    window.cancelAnimationFrame(this.frameId)\r\n  }\r\n\r\n  animate = () => {\r\n    this.controls.update();\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.frameId = window.requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: '1rem' }}>\r\n        <h4>Convex Hull of Left Cars</h4>\r\n        <div\r\n          style={{ width: '400px', height: '400px', margin: 'auto' }}\r\n          ref={(mount) => { this.mount = mount }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ candidates, leftPoints }) => ({ candidates, leftPoints });\r\n\r\nexport default connect(mapStateToProps)(ConvexHull);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setActiveComponent,\r\n  incrementQCount,\r\n  setLeftPoints,\r\n  prunePoints\r\n} from \"../actions\";\r\nimport ConvexHull from \"./ConvexHull\";\r\n\r\nconst SIMPLEX = 2;\r\nconst RANDOM = 1;\r\n\r\nfunction getPrunedIndices(prevIndices, currIndices) {\r\n  let prunedIndices = [];\r\n  for (let i = 0, j = 0; i < prevIndices.size() || j < currIndices.size();) {\r\n    if (j >= currIndices.size() || prevIndices.get(i) < currIndices.get(j)) {\r\n      prunedIndices.push(prevIndices.get(i));\r\n      ++i;\r\n    } else {\r\n      ++i;\r\n      ++j;\r\n    }\r\n  }\r\n  return prunedIndices;\r\n}\r\n\r\nfunction point2Array(point) {\r\n  let arr = [];\r\n  for (let i = 0; i < point.dim(); ++i) {\r\n    arr.push(point.get(i));\r\n  }\r\n  return arr;\r\n}\r\n\r\nfunction points2Array2D(points) {\r\n  let arr = [];\r\n  for (let i = 0; i < points.size(); ++i) {\r\n    arr.push(point2Array(points.get(i)));\r\n  }\r\n  return arr;\r\n}\r\n\r\nclass Interaction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const smallerBetter = new window.Module.VectorInt();\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        smallerBetter.push_back(config.smallerBetter ? 1 : 0);\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n    this.runner = new window.Module.AlgorithmRunner(\r\n      this.props.candidates,\r\n      smallerBetter,\r\n      this.props.mode === \"random\" ? RANDOM : SIMPLEX\r\n    );\r\n    this.prevIndices = this.runner.getCandidatesIndices();\r\n    let leftPoints = [];\r\n    for (let i = 0; i < this.prevIndices.size(); ++i) {\r\n      const idx = this.prevIndices.get(i);\r\n      const point = this.props.candidates.get(idx);\r\n      const p = [idx, ...point2Array(point)];\r\n      leftPoints.push(p);\r\n    }\r\n    this.props.setLeftPoints(leftPoints);\r\n    if (this.prevIndices.size() < 2) {\r\n      this.state = { pair: [] };\r\n      this.stopInteraction();\r\n    } else {\r\n      this.state = {\r\n        pair: points2Array2D(this.runner.nextPair())\r\n      };\r\n    }\r\n  }\r\n\r\n  choose = idx => {\r\n    const option = idx + 1;\r\n    this.runner.choose(option);\r\n    const currIndices = this.runner.getCandidatesIndices();\r\n    const prunedIndices = getPrunedIndices(this.prevIndices, currIndices);\r\n    const prunedPoints = prunedIndices.map(idx => {\r\n      const point = this.props.candidates.get(idx);\r\n      return [idx, this.props.numQuestions + 1, ...point2Array(point)];\r\n    });\r\n    this.props.prunePoints(prunedPoints, prunedIndices);\r\n    this.prevIndices = currIndices;\r\n    this.props.incrementQCount();\r\n    if (this.prevIndices.size() < 2) {\r\n      this.stopInteraction();\r\n    } else {\r\n      const nextPair = points2Array2D(this.runner.nextPair());\r\n      this.setState({\r\n        pair: nextPair\r\n      });\r\n    }\r\n  };\r\n\r\n  stopInteraction = () => {\r\n    window.Module.releasePoints(this.props.candidates);\r\n    this.props.showResult();\r\n  }\r\n\r\n  render() {\r\n    const ths = [<th key=\"Option No.\">Option</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    ths.push(<th key=\"chooseButton\" />);\r\n\r\n    const trs = this.state.pair.map((point, idx) => {\r\n      const tds = [<td key=\"Option No.\">{idx + 1}</td>];\r\n      point.forEach((x, i) => {\r\n        tds.push(<td key={i}>{x}</td>);\r\n      });\r\n      tds.push(\r\n        <td key=\"chooseButton\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm\"\r\n            onClick={() => this.choose(idx)}\r\n          >\r\n            Choose\r\n          </button>\r\n        </td>\r\n      );\r\n      return <tr key={idx}>{tds}</tr>;\r\n    });\r\n    return (\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <h4>Q{this.props.numQuestions + 1}: Choose the Car You Favor More among the Following Options</h4>\r\n          <table className=\"table table-hover text-center\">\r\n            <thead>\r\n              <tr>{ths}</tr>\r\n            </thead>\r\n            <tbody>{trs}</tbody>\r\n          </table>\r\n          <button type=\"button\" className=\"btn btn-primary\" onClick={this.stopInteraction}>\r\n            Stop\r\n          </button>\r\n          {\r\n            this.attributes.length === 3 && <ConvexHull />\r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n}) => ({\r\n  candidates,\r\n  mask,\r\n  attributes,\r\n  numQuestions,\r\n  mode\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  showResult: () => {\r\n    dispatch(setActiveComponent(\"Result\"));\r\n  },\r\n  incrementQCount: () => {\r\n    dispatch(incrementQCount());\r\n  },\r\n  setLeftPoints: leftPoints => {\r\n    dispatch(setLeftPoints(leftPoints));\r\n  },\r\n  prunePoints: (points, indices) => {\r\n    dispatch(prunePoints(points, indices));\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Interaction);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { XYPlot, XAxis, YAxis, Hint, VerticalBarSeries, ChartLabel } from 'react-vis';\r\n\r\nclass Histogram extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hintValue: null\r\n    }\r\n    this.data = props.numLeftPoints.map((num, i) => ({ x: i, y: num }));\r\n  }\r\n\r\n  _onMouseLeave = () => {\r\n    this.setState({\r\n      hintValue: null\r\n    });\r\n  }\r\n\r\n  _onNearestX = (value, { index }) => {\r\n    this.setState({\r\n      hintValue: this.data[index]\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <XYPlot onMouseLeave={this._onMouseLeave} height={400} width={400}>\r\n        <XAxis\r\n          tickValues={this.props.numLeftPoints.map((num, i) => i)}\r\n          tickFormat={value => value.toString()}\r\n        />\r\n        <YAxis />\r\n        <ChartLabel\r\n          text=\"Question No.\"\r\n          includeMargin={false}\r\n          xPercent={0.82}\r\n          yPercent={1.06}\r\n        />\r\n        <ChartLabel\r\n          text=\"No. of Cars Left\"\r\n          includeMargin={false}\r\n          xPercent={-0.01}\r\n          yPercent={0.05}\r\n          style={{\r\n            transform: 'rotate(-90)',\r\n            textAnchor: 'end'\r\n          }}\r\n        />\r\n        <VerticalBarSeries color='rgb(0, 123, 255)' onNearestX={this._onNearestX} data={this.data} />\r\n        {\r\n          this.state.hintValue &&\r\n          <Hint value={this.state.hintValue}>\r\n            <p style={{ color: 'rgb(90, 90, 90)' }}>Q{this.state.hintValue.x}: {this.state.hintValue.y} Cars Left</p>\r\n          </Hint>\r\n        }\r\n      </XYPlot>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ numLeftPoints }) => ({ numLeftPoints });\r\n\r\nexport default connect(mapStateToProps)(Histogram);","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setActiveComponent, restart } from \"../actions\";\r\nimport Histogram from \"./Histogram\";\r\n\r\nfunction Result({ leftPoints, attributes, mask, numQuestions, restart }) {\r\n  let ths = [];\r\n  attributes.forEach(([attr, config]) => {\r\n    if (mask[attr]) {\r\n      const th = <th key={attr}>{attr}</th>;\r\n      ths.push(th);\r\n    }\r\n  });\r\n  const trs = leftPoints.map((point, idx) => (\r\n    <tr key={idx}>\r\n      {point.slice(1).map((x, idx) => (\r\n        <td key={idx}>{x}</td>\r\n      ))}\r\n    </tr>\r\n  ));\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"col\">\r\n        <h4>\r\n          The Total No. of Questions Asked is: {numQuestions}.\r\n        </h4>\r\n        <h4>\r\n          {\r\n            leftPoints.length === 1 ?\r\n              \"Your Favourite Car is:\" :\r\n              `${leftPoints.length} Cars Left in the Database:`\r\n          }\r\n        </h4>\r\n        <table className=\"table table-hover text-center\">\r\n          <thead>\r\n            <tr>{ths}</tr>\r\n          </thead>\r\n          <tbody>\r\n            {trs}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"d-flex justify-content-center\">\r\n          <Histogram />\r\n        </div>\r\n        <button type=\"button\" className=\"btn btn-primary\" onClick={restart}>\r\n          Return to Welcome\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ leftPoints, attributes, mask, numQuestions }) => ({\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  restart: () => {\r\n    dispatch(setActiveComponent(\"Welcome\"));\r\n    dispatch(restart());\r\n  }\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Result);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Stats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.attributes = [];\r\n    this.props.attributes.forEach(([attr, config]) => {\r\n      if (this.props.mask[attr]) {\r\n        this.attributes.push(attr);\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let ths = [<th key=\"Step No.\">Step</th>];\r\n    this.attributes.forEach(attr => {\r\n      ths.push(<th key={attr}>{attr}</th>);\r\n    });\r\n    const prunedTrs = this.props.prunedPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    const leftTrs = this.props.leftPoints.map((point, idx) => (\r\n      <tr key={idx}>\r\n        {point.slice(1).map((x, idx) => (\r\n          <td key={idx}>{x}</td>\r\n        ))}\r\n      </tr>\r\n    ));\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h4>The No. of Cars We Have Pruned: {this.props.prunedPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths}</tr>\r\n            </thead>\r\n            <tbody>{prunedTrs}</tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"col\">\r\n          <h4>The No. of Cars Left in the Database: {this.props.leftPoints.length}</h4>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>{ths.slice(1)}</tr>\r\n            </thead>\r\n            <tbody>{leftTrs}</tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToPropsStats = ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n}) => ({\r\n  prunedPoints,\r\n  leftPoints,\r\n  attributes,\r\n  mask,\r\n  numQuestions\r\n});\r\n\r\nexport default connect(mapStateToPropsStats)(Stats);\r\n","import React from \"react\";\r\nimport Welcome from \"./Welcome\";\r\nimport Interaction from \"./Interaction\";\r\nimport Result from \"./Result\";\r\nimport Stats from \"./Stats\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction App({ activeComponent }) {\r\n  if (activeComponent === \"Welcome\") {\r\n    return <Welcome />;\r\n  } else if (activeComponent === \"Interaction\") {\r\n    return (\r\n      <div>\r\n        <Interaction />\r\n        <Stats />\r\n      </div>\r\n    );\r\n  } else if (activeComponent === \"Result\") {\r\n    return <Result />;\r\n  } else {\r\n    return <div />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activeComponent }) => ({\r\n  activeComponent\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./components/App\";\r\n\r\nwindow.Module = {\r\n  onRuntimeInitialized: function() {\r\n    const dataset = new window.Module.Dataset(\"car.txt\");\r\n    const attributes = [\r\n      [\"Price (USD)\", { low: 1000, high: 50000, smallerBetter: true }],\r\n      [\"Year\", { low: 2001, high: 2017, smallerBetter: false }],\r\n      [\"Power (HP)\", { low: 50, high: 400, smallerBetter: false }],\r\n      [\"Used KM\", { low: 10000, high: 150000, smallerBetter: true }]\r\n    ];\r\n    const mask = {};\r\n    attributes.forEach(([attr, config]) => {\r\n      mask[attr] = 1;\r\n    });\r\n\r\n    const store = createStore(\r\n      rootReducer,\r\n      { dataset, attributes, mask }\r\n      //, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    );\r\n    render(\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n};\r\n\r\nconst script = document.createElement(\"script\");\r\nscript.src = \"web.js\";\r\nscript.async = true;\r\ndocument.body.appendChild(script);\r\n"],"sourceRoot":""}